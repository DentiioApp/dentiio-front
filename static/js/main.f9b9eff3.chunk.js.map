{"version":3,"sources":["images/illus.png","images/mobile-bg.svg","images/logo.svg","images/maquette/c-case-title.svg","images/titleHeader.svg","images/titleHeaderMobile.svg","images/icon/iconTeethFull.svg","images/empty.png","services/Specialities.js","services/CatPathologies.js","store/actions/index.js","services/Auth.js","components/UI/ResponsiveDesign/AuthStyle.js","services/Users.js","services/Email.js","components/UI/buttons/GradientBtn.js","utils/fields/checkEmail.js","utils/fields/checkFiles.js","utils/fields/checkPassword.js","utils/api/api.js","utils/cases/filters.js","utils/index.js","components/App/Auth/Register/Register.js","config/index.js","components/App/Auth/SignIn/SignIn.js","components/UI/Modal/StatusJustif.js","components/App/Auth/Status/Status.js","services/Jobs.js","components/UI/Dawers/Spinner.js","containers/Home/Home.js","services/Cases.js","components/UI/buttons/FavButton/FavButton.js","components/UI/Avatars/UserAvatar.js","components/UI/buttons/Keywords/keywords.js","components/App/Cases/CaseItem/CaseItem.js","utils/cases/notes.js","components/UI/Paginator/Paginator.js","components/App/Cases/CasesList/CasesList.js","components/UI/ColorTheme/Palette.js","components/UI/titleHeader/TitleHeader.js","components/UI/titleHeader/titleHeaderMobile.js","components/UI/Icon/Header/Add.js","components/UI/Icon/Header/home.js","components/UI/Icon/Header/favorites.js","components/UI/Icon/Profile/iconProfile.js","components/UI/Icon/iconNotifSubject/iconNotifSubject.js","components/UI/Icon/Header/notification.js","components/UI/RightMenuIcon/rightMenuIcon.js","components/App/Header/Header.js","services/Home.js","components/UI/Dawers/CategoriesCases.js","store/actions/SpecialitiesAction.js","store/actions/CatPathologiesAction.js","components/UI/Search/CasesSearch/CasesSearch.js","containers/Cases/Cases.js","containers/Favorites/Favorites.js","components/UI/buttons/ParametersProfileButton.js","containers/Profile/Profile.js","serviceWorker.js","store/reducers/casesReducer.js","store/reducers/homeReducer.js","store/reducers/userReducer.js","store/reducers/specialitiesReducer.js","store/reducers/treatmentsReducer.js","store/reducers/pathologiesReducer.js","store/reducers/catPathologiesReducer.js","store/reducers/index.js","components/UI/ColorTheme/ColorTheme.js","components/App/Cases/DetailCase/NavbarDetail.js","components/App/Cases/DetailCase/PatientDetail.js","components/UI/Gallery/Gallery.js","components/UI/Gallery/LightboxButton.js","components/App/Cases/DetailCase/CardPlanTreatment.js","components/App/Cases/DetailCase/Rating.js","containers/DetailCase/DetailCase.js","components/Helper/Modal/ModalGuidelines-PostCase/ModalGuidelinesPostCase.js","components/App/Cases/PostCase/Patient/Patient.js","components/App/Cases/PostCase/Exam/ExamComplementaire.js","components/App/Cases/PostCase/Exam/Exam.js","components/App/Cases/PostCase/Diagnostic/Diagnostic.js","components/App/Cases/PostCase/Evolution/Evolution.js","services/Patient.js","components/App/Cases/PostCase/ClinicCase/ClinicCase.js","components/App/Cases/PostCase/TreatPlan/TreatPlan.js","components/UI/Steppers/PostCaseStepper.js","containers/CasePost/CasePost.js","containers/QuestionPost/QuestionPost.js","components/UI/Avatars/Library.js","containers/UserAvatar/Tab.js","containers/UserAvatar/UserAvatar.js","containers/Profile/EditProfile.js","index.js"],"names":["module","exports","fetchSpecialitesData","axios","get","process","then","res","message","datas","data","catch","e","JSON","stringify","fetchCatPathologiesData","CASES_LIST","OPEN_SIDE_BAR","CLOSE_SIDE_BAR","SET_SPECIALITIES","SET_TREATMENTS","SET_PATHOLOGIES","SET_CAT_PATHOLOGIES","login","token","defaults","headers","Authorization","localStorage","setItem","logout","window","removeItem","clear","setup","tk","getItem","connect","jwtDecode","exp","Date","getTime","oStyle","theme","imgDesktop","imgMobile","root","height","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","paper","margin","spacing","display","flexDirection","alignItems","avatar","width","form","marginTop","GradientBtn","logo","position","treatmentPhotoInput","minHeight","minWidth","top","right","borderRadius","marginRight","breakpoints","down","marginLeft","USERS","loginCheck","email","passwd","post","username","password","registerCheck","user","a","pseudo","randomstring","generate","length","charset","statusText","responses","getUserId","userId","getUserById","id","saveCard","licenceDOC","licenceDoc","image","put","console","warning","saveAvatar","avatarId","AVATAR","editUser","sendEmail","item","user_id","service_id","template_id","template_params","to_name","to_mail","props","classes","makeStyles","background","border","color","padding","boxShadow","fontSize","label","textTransform","useStyles","Button","onClick","description","checkEmail","test","resetInput","event","target","value","checkMimeType","file","err","every","goodType","error","checkPassword","errorApi","RegExp","favOrCase","slashIndex","undefined","clinicalCaseId","lastIndexOf","Number","substr","SUCCESS","OVERCOUNT","OVERSIZE","SIZE_AVAILABLE","Register","dispatch","useDispatch","addToast","useToasts","useSelector","state","home","jobs","config","messages","conf","auth","useState","emailSent","setEmailSent","job","showPassword","values","setValues","errEmail","setErrEmail","errPassword","setErrPassword","errCgu","setErrCgu","catchSubmit","preventDefault","register","appearance","sendRequest","nom","prenom","toLowerCase","createdAt","toISOString","isEnabled","log","success","handleChange","prop","to","Grid","container","component","className","alt","src","xs","sm","md","Paper","elevation","square","Typography","variant","noValidate","onSubmit","InputLabel","TextField","fullWidth","select","onChange","MenuItem","key","disabled","map","option","ident","name","required","autoComplete","onKeyDown","keyCode","helperText","FormControl","htmlFor","OutlinedInput","endAdornment","InputAdornment","IconButton","aria-label","onMouseDown","edge","onKeyUp","FormControlLabel","control","Switch","checked","inputProps","Link","href","switchToLogin","app","season","url","cache","currentCase","patient","averageNote","commentaires","conclusion","evolution","keyword","notations","observation","pathologie","presentation","speciality","symptome","treatment","treatmentPlan","keywords","i18n","zendesk","analytics","googleTagManager","payment","ages","sexes","timeOut","cases","patientError","favorite","add","delete","Profile","signin","autoLogError","card","pending","SignIn","subscribeMsg","response","autoFocus","placeholder","align","switchToSubscribe","DialogTitle","withStyles","closeButton","children","onClose","other","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","StatusJustif","React","open","setOpen","handleClose","Dialog","aria-labelledby","dividers","gutterBottom","Status","credentials","fileReader","FileReader","useEffect","isSignIn","errCard","setErrCard","document","querySelector","files","uploadFile","onload","FileLoadEvent","base64","result","readAsDataURL","lg","Input","checkedFile","filesNumber","existErr","i","size","checkType","checkFiles","FormHelperText","fetchJobs","textAlign","paddingTop","CircularIndeterminate","CircularProgress","Home","loader","isLoaded","jobsLoaded","subscribe","loadJobs","CLINICAL_CASES","FAVORITES","fetchCases","page","items","addFavCase","status","removeFavCase","fetchUserFav","allFavCase","favMatch","filter","fav","favId","USERFAVORITES","postCase","age","smoking","isASmoker","summary","global_desc","symptomes","specialities","title","slug","FavButton","toggle","setToggle","isFavorite","HandleFav","addOrDelete","style","float","UserAvatar","avatarStyle","topType","accessoriesType","hairColor","facialHairType","facialHairColor","clotheType","clotheColor","eyeType","eyebrowType","mouthType","skinColor","Keywords","CasesItem","Card","textDecoration","CardMedia","imageClinicalCases","img","path","index","CardContent","CardActions","disableSpacing","isNaN","notes","sum","note","avgNotes","linksTab","Paginator","pages","push","flexWrap","justifyContent","CasesList","caseSelector","casesList","casesFiltred","nbrCases","areLoaded","casesLoaded","favorites","Math","round","paginator","getCases","fetch","nbrItems","initUserFav","Container","maxWidth","titleSvg","current","oCase","Palette","primary","secondary","white","titleHeader","Icon","titleHeaderMobile","Add","anchorEl","setAnchorEl","history","useHistory","isMenuOpen","Boolean","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","profile","profileId","profileImg","aria-haspopup","aria-controls","currentTarget","htmlColor","iconProfile","Img","iconNotifSubject","Notification","handleMenuClose","Badge","badgeContent","grow","flexGrow","menuButton","up","sectionDesktop","sectionMobileTop","zIndex","sectionMobileBottom","bottom","RightMenuIcon","Header","currents_user","current_user","AppBar","Toolbar","TitleHeader","fetchKeywords","list","fullList","TemporaryDrawer","left","setState","catPathologies","toggleDrawer","anchor","fetchSpecialitiesData","Fragment","Drawer","clsx","role","Accordion","AccordionSummary","expandIcon","ListItem","ListItemText","button","nested","List","catPathologie","pathologies","specialitie","treatments","barWidth","categoryButton","fontWeight","Search","loadKeywords","keywordsLoad","onTextChanged","newdata","regex","options","firstLetter","toUpperCase","Autocomplete","sort","b","localeCompare","groupBy","getOptionLabel","renderInput","params","onSelect","Cases","fetchUser","setFetchUser","ResponseUser","Object","entries","Favorites","favsIds","keys","caseId","favoriteCases","includes","StyledMenu","getContentAnchorEl","StyledMenuItem","main","common","ParametersProfileButton","startIcon","ListItemIcon","location","maxHeight","large","flright","flex","setCases","ResponseCases","CLINICAL_CASES_BY_USER","CaseById","direction","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reg","INIT_STATE","openSideBar","users","internet","level","levelStepperPostCase","connected","adminReducer","combineReducers","action","concat","newobject","favType","caseIndex","splice","details","usersLoaded","onLine","ColorTheme","createMuiTheme","light","overrides","MuiTypography","colorTextPrimary","sectionMobile","detailnav","NavbarDetail","wrap","goBack","activeClass","spy","smooth","offset","duration","content","overflowX","pos","marginBottom","PatientDetail","smoker","drink","isAlcool","inTreatment","empty","problemHealth","Table","TableBody","TableRow","TableCell","scope","gender","Divider","allergen","Gallery","images","LightboxButton","photoIndex","isOpen","this","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","Component","media","CardPlanTreatment","Media","CardActionArea","RatingCase","setUser","Rating","alignSelf","defaultValue","precision","alignRight","subtitle","icon","paddingRight","resume","profileName","textCenter","h3","borderBottom","borderColor","fixed","titleExam","patientDesktop","patientMobile","paddigTopTitle","DetailCase","ResponseCase","iconTeethFull","imagesExam","array","original","thumbnail","imagesBiopsy","Patient","spe","toLocaleDateString","weekday","year","month","day","justify","reason_consult","imagesExamFirst","scanner","Scanner","biopsy","Biopsy","diagnostic","Evolution","AlertDialog","aria-describedby","errAge","errGender","errReason_consultation","errors","setErrors","isValid","reason_consultation","multiline","rows","isDrinker","old_injury","errProblem_health","errCurrent_treatment","allergies","errAllergies","TabPanel","hidden","Box","p","a11yProps","tabs","borderRight","ExamComplementaire","setValue","Tabs","orientation","newValue","Tab","showPreviews","showPreviewsInDropzone","dropzoneText","useChipsForPreview","previewGridProps","previewText","scanner_desc","Fingerprint","biopsy_desc","AddAPhoto","moulage_desc","Panorama","teleradio_desc","Exam","exam_pics","extra_exam_desc","errIntra_extra_oral_desc","errExtra_exam_name","errSymptomes","intra_extra_oral_desc","catchOnmit","newSymptome","rest","multiple","isMulti","SelectProps","Diagnostic","errPathologies","errDiagnostic","errMedication_administered","errGlobal_desc","medication_administered","newPathologie","errEvolution","evolution_pics","AddAPhotoIcon","errConclusion","postPatient","isMedicalBackground","is_medical_background","problem_health","in_treatment","ClinicCase","errTitle","errSummary","errKeywords","errSpecialities","MuiDropzoneArea","TreatPlan","errStep","errTreatment","step1","newTreatments","step","instructions","PostCaseStepper","activeStep","setActiveStep","steps","Stepper","alternativeLabel","Step","StepLabel","CasePost","getSpecialities","specialitiesLoaded","getKeywords","keywordsLoaded","getPathologies","pathologiesLoaded","getTreatments","treatmentsLoaded","getSymptomes","symptomesLoaded","medical_background","current_treatments","pictures_clinic_exam","extra_exam_name","extra_exam_pictures","scanner_pics","biopsy_pics","moulage_pics","teleradio_pics","step1Pics","step2","step2Pics","step3","step3Pics","inCrement","setInCrement","getElementById","newDiv","createElement","setAttribute","append","createFactory","appendChild","addFields","QuestionPost","Mouth","Eye","Eyebrows","Hair","HairColor","SkinColor","Accessories","Clothes","ClothesColor","Beard","btn","arrowBack","TabAvatar","mouth","setMouth","eye","setEye","eyebrow","setEyebrow","hair","setHair","setHaircolor","setSkinColor","accessories","setAccessories","clothe","setClothe","setClotheColor","beard","setBeard","beardColor","setBeardColor","setI","scrollButtons","indicatorColor","textColor","pieceType","pieceSize","EditProfile","setPseudo","setEmail","dotenv","store","createStore","compose","applyMiddleware","ReduxThunk","next","ReactDOM","render","ThemeProvider","colorTheme","autoDismiss","autoDismissTimeout","exact","URL","origin","addEventListener","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f9b9eff3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/illus.118607fe.png\";","module.exports = __webpack_public_path__ + \"static/media/mobile-bg.6a3438cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.62f3c076.svg\";","module.exports = __webpack_public_path__ + \"static/media/c-case-title.943f65d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/titleHeader.22ac42e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/titleHeaderMobile.9f2eceea.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconTeethFull.d65dc867.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.8fe4f7da.png\";","import axios from 'axios'\n\nconst SPECILITIES =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_SPECIALITIES\n\nconst fetchSpecialitesData = () => {\n  const reponses = axios\n    .get(SPECILITIES)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n  return reponses\n}\n\nexport default fetchSpecialitesData\n","import axios from 'axios'\n\nconst CAT_PATHOLOGIES =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_CAT_PATHOLOGIES\n\nconst fetchCatPathologiesData = () => {\n  return axios\n    .get(CAT_PATHOLOGIES)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n}\n\nexport default fetchCatPathologiesData\n","import { openSideBar, closeSideBar } from './CasesAction'\nimport { fetchSpecialities } from './SpecialitiesAction'\nimport { fetchTreatments } from './TreatmentsAction'\nimport { fetchPathologies } from './PathologiesAction'\nimport { fetchCatPathologies } from './CatPathologiesAction'\n\nexport const ADD_FAVORITE = 'ADD_FAVORITE'\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE'\nexport const INIT_FAV_CASE = 'INIT_FAV_CASE'\nexport const CASES_LIST = 'CASES_LIST'\nexport const CASE_FILTERED = 'CASE_FILTERED'\nexport const FREE_CREDENTIALS = 'FREE_CREDENTIALS'\nexport const JOB_LIST = 'JOB_LIST'\nexport const LOG_USER = 'LOG_USER'\nexport const LOGIN_FORM = 'LOGIN_FORM'\nexport const SUBSCRIBE_FORM = 'SUBSCRIBE_FORM'\nexport const REGISTER_USER = 'REGISTER_USER'\nexport const VALID_STATUS = 'VALID_STATUS'\nexport const UPDATE_AVATAR = 'UPDATE_AVATAR'\nexport const KEYWORDS_LIST = 'KEYWORDS_LIST'\nexport const UPDATE_LEVEL = 'UPDATE_LEVEL'\nexport const UPDATE_STEPPER_POSTCASE = 'UPDATE_STEPPER_POSTCASE'\nexport const SPECS_LIST = 'SPECS_LIST'\nexport const PATHO_LIST = 'PATHO_LIST'\nexport const TREATMENTS_LIST = 'TREATMENTS_LIST'\nexport const SYMPTOMES_LIST = 'SYMPTOMES_LIST'\nexport const OPEN_SIDE_BAR = 'OPEN_SIDE_BAR'\nexport const CLOSE_SIDE_BAR = 'CLOSE_SIDE_BAR'\nexport const SET_USER = 'SET_USER'\nexport const SET_SPECIALITIES = 'SET_SPECIALITIES'\nexport const SET_TREATMENTS = 'SET_TREATMENTS'\nexport const SET_PATHOLOGIES = 'SET_PATHOLOGIES'\nexport const SET_CAT_PATHOLOGIES = 'SET_CAT_PATHOLOGIES'\nexport const START_LOADER = 'START_LOADER'\nexport const STOP_LOADER = 'STOP_LOADER'\n\nexport {\n  openSideBar,\n  closeSideBar,\n  fetchSpecialities,\n  fetchTreatments,\n  fetchPathologies,\n  fetchCatPathologies,\n}\n","import axios from 'axios'\nimport jwtDecode from 'jwt-decode'\n\nconst BEARER = 'Bearer '\n\nexport const login = (token) => {\n  axios.defaults.headers.Authorization = BEARER + token\n  localStorage.setItem('authToken', token)\n}\n\nexport const logout = () => {\n  window.localStorage.removeItem('authToken')\n  localStorage.clear()\n  delete axios.defaults.headers.Authorization\n}\n\n// Verifie si un token existe dans le localStorage\nexport const setup = (tk) => {\n  const token = window.localStorage.getItem('authToken') || tk\n  var connect = false\n\n  if (token) {\n    axios.defaults.headers.Authorization = BEARER + token\n\n    window.localStorage.removeItem('authSubscribeMsg')\n\n    const jwtData = jwtDecode(token)\n\n    if (jwtData.exp * 1000 > new Date().getTime()) {\n      connect = true\n    } else {\n      logout()\n    }\n  } else {\n    logout()\n  }\n\n  return connect\n}\n","export const oStyle = (theme, imgDesktop, imgMobile) => {\n  return {\n    root: {\n      height: '100vh',\n      backgroundImage: `url(${imgDesktop})`,\n      backgroundRepeat: 'no-repeat',\n      backgroundColor:\n                theme.palette.type === 'light'\n                  ? theme.palette.grey[50]\n                  : theme.palette.grey[900],\n      backgroundSize: 'contain',\n\n      '@media (max-width:1025px)': {\n        backgroundSize: 'cover',\n\n        '@media (max-width:767px)': {\n          backgroundImage: `url(${imgMobile})`,\n          backgroundSize: 'cover'\n\n        }\n      }\n    },\n\n    paper: {\n      margin: theme.spacing(5, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      width: '15%'\n      // backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    GradientBtn: {\n      margin: theme.spacing(3, 0, 2)\n    },\n\n    logo: {\n      position: 'absolute',\n      margin: '13px 23px 0px 50px'\n    },\n    treatmentPhotoInput:{\n      minHeight: '100px!important'\n    },\n\n    login: {\n      minWidth: '500px',\n      height: 'fit-content',\n      position: 'absolute',\n      marginTop: '0%',\n      top: '4%',\n      right: '0',\n      borderRadius: '20px',\n      marginRight: '10%',\n      [theme.breakpoints.down('sm')]: {\n        minWidth: '150px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        position: 'inherit',\n        marginTop: '25%'\n      }\n    }\n  }\n}\n\nexport default oStyle\n","import axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport randomstring from 'randomstring'\n\nconst LOGIN_CHECK = process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_LOGIN_CHECK\nconst USERS = process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_USERS\nconst AVATAR = process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_AVATAR\n\nexport const loginCheck = (email, passwd) => {\n    return axios.post(\n        LOGIN_CHECK, { username: email, password: passwd }\n    ).then((res) =>{ return  {message: 'OK', datas: res}})\n        .catch((e) => JSON.stringify(e))\n}\n\nexport const registerCheck =  async (user) => {\n    const pseudo = 'Dentiio-' + randomstring.generate({\n        length: 6,\n        charset: 'alphabetic'\n    })\n\n    user.pseudo = pseudo\n\n    let responses = await axios\n        .post(USERS, user)\n        .then((res) => {\n            localStorage.setItem('authSubscribeMsg', res.statusText)\n            return { message: 'OK', datas: res.statusText }\n        })\n        .catch((e) => JSON.stringify(e))\n\n    return responses = responses.datas !== 'Created' ? {} : responses\n}\n\nexport const getUserId = () => {\n    const token = jwtDecode(localStorage.getItem('authToken'))\n    return token.userId\n}\n\nexport const getUserById = (id) => {\n    return axios\n        .get(USERS + '/' + id)\n        .then((res) => ({\n            message: 'OK',\n            datas: res.data\n        }))\n        .catch((e) => JSON.stringify(e))\n}\n\nexport const saveCard = async (data) => {\n    let licenceDOC = { licenceDoc: data.image }\n    return await axios.put(USERS + '/' + data.userId, licenceDOC)\n        .then(res => res.statusText)\n        .catch(console.warning)\n}\n\nexport const saveAvatar = async (data) => {\n    const avatarId = data[\"avatarId\"]\n    delete data['avatarId']\n    return await axios.put(AVATAR + '/' + avatarId, data)\n        .then(res => res.statusText)\n        .catch(console.warning)\n}\n\nexport const editUser = async (data) => {\n    const userId = data[\"userId\"]\n    delete data['userId']\n    return await axios.put(USERS + '/' + userId, data)\n        .then(res => res.statusText)\n        .catch(console.warning)\n}","import axios from 'axios'\n\nexport const sendEmail = (email, pseudo) => {\n  const item = {\n    user_id: process.env.REACT_APP_EMAIL_USER_ID,\n    service_id: process.env.REACT_APP_EMAIL_SERVICE_ID,\n    template_id: process.env.REACT_APP_EMAIL_TEMPLATE_ID,\n    template_params: {\n      to_name: pseudo,\n      to_mail: email\n    }\n  }\n  const reponse = axios.post(process.env.REACT_APP_EMAIL_URL, item)\n    .then((res) => (res))\n    .catch((e) => JSON.stringify(e))\n  return reponse\n}\n","import Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nconst GradientBtn = (props) => {\n  const useStyles = makeStyles({\n    root: {\n      background: 'linear-gradient(45deg, #4cb3eb 30%, #9CDEF4 85%)',\n      borderRadius: 20,\n      border: 0,\n      color: 'white',\n      height: 52,\n      width: 210,\n      padding: '0 30px',\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      display: 'flex',\n      margin: 'auto',\n      fontSize: '17px'\n    },\n    label: {\n      textTransform: 'capitalize'\n    }\n  })\n  const classes = useStyles()\n\n  return (\n    <Button\n      classes={{\n        root: classes.root,\n        label: classes.label\n      }}\n      onClick={props.onClick}\n    >\n      {props.description}\n    </Button>\n  )\n}\n\nexport default GradientBtn\n","export const checkEmail = (email) => {\n  return (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\n}\n","import { SUCCESS, OVERCOUNT, OVERSIZE, SIZE_AVAILABLE } from '../'\n\nconst resetInput = (event) => {\n  event.target.value = null // discard selected file\n}\n\nconst checkMimeType = (file, event) => {\n  let err = ''\n  const typesAvailable = ['image/png', 'image/jpeg', 'image/jpg']\n  if (typesAvailable.every(goodType => file.type !== goodType)) {\n    err += 'les fichiers au format ' + file.type + ' ne sont pas supportés\\n'\n  }\n\n  if (err !== '') { // if message not same old that mean has error\n    resetInput(event)// discard selected file\n\n    return { error: err, message: err }\n  }\n\n  return { error: err, message: err }\n}\n\nexport const checkFiles = (event) => {\n  const files = event.target.files // create file object\n  const filesNumber = files.length\n  let message = SUCCESS\n  let existErr = false\n\n  // if max upload files selected not accross\n  if (filesNumber < 3) {\n    for (var i = 0; i < filesNumber; i++) {\n      if (files[i].size <= SIZE_AVAILABLE) {\n        const checkType = checkMimeType(files[i], event)\n        if (checkType.error !== '') {\n          message = checkType.message\n          existErr = true\n          resetInput(event)\n\n          return { error: existErr, message: message }\n        }\n      } else {\n        message = OVERSIZE\n        existErr = true\n        resetInput(event)\n\n        return { error: existErr, message: message }\n      }\n    }\n  } else {\n    event.target.value = null // discard selected file\n    message = OVERCOUNT\n    existErr = true\n\n    resetInput(event)\n  }\n\n  return { error: existErr, message: message }\n}\n","export const checkPassword = (password) => {\n  // speial chars , upper letter , lower letter, number more than 7 chars\n  return (/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#'<>\"#?¨áàâäãåçéèêëíìîïñóòôöõúùûüýÿæœÁÀÂÄÃÅÇÉÈÊËÍÌÎÏÑÓÒÔÖÕÚÙÛÜÝŸÆŒ()),$%^+=\\-_°\\\\:/&.;|*])(?=.{8,})/.test(password))\n}\n","export const errorApi = () => RegExp(/Error/)\n","export const favOrCase = (item) => {\n  let data = null \n  if (item[\"@type\"] === 'Favorite') {\n    const slashIndex = item.clinicalCaseId !== undefined ? item.clinicalCaseId.lastIndexOf('/') : false\n    data = slashIndex ? Number(item.clinicalCaseId.substr(slashIndex).substr(1, slashIndex.length)) : 0\n  } else {\n    data = item.id ? item.id : data\n  }\n  \n  return data\n}","import { checkText } from './fields/checkText'\nimport { checkEmail } from './fields/checkEmail'\nimport { checkFiles } from './fields/checkFiles'\nimport { checkPassword } from './fields/checkPassword'\nimport { avgNotes } from './cases/notes'\nimport { errorApi } from './api/api'\nimport { favOrCase } from './cases/filters'\n\nexport { avgNotes }\nexport { checkText }\nexport { checkEmail }\nexport { checkFiles }\nexport { checkPassword }\nexport { errorApi }\nexport { favOrCase }\n\nexport const SUCCESS = 'Vos fichiers on bien étés sauvergardés'\nexport const OVERCOUNT = 'Uniquement 2 images à la fois'\nexport const OVERSIZE = 'Fichiers trops volumineux'\nexport const SIZE_AVAILABLE = 3060342\n","import './register.scss'\n\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nimport {\n  Switch,\n  Paper,\n  Typography,\n  Link\n  , FormControlLabel, FormControl\n} from '@material-ui/core/'\n\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport imgDesktop from '../../../../images/illus.png'\nimport imgMobile from '../../../../images/mobile-bg.svg'\nimport logo from '../../../../images/logo.svg'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport { useToasts } from 'react-toast-notifications'\nimport { setup } from '../../../../services/Auth'\nimport oStyle from '../../../UI/ResponsiveDesign/AuthStyle'\nimport { registerCheck } from '../../../../services/Users'\nimport { sendEmail } from '../../../../services/Email'\n\nimport { LOGIN_FORM, REGISTER_USER } from '../../../../store/actions'\nimport GradientBtn from '../../../UI/buttons/GradientBtn'\nimport { checkEmail, checkPassword } from '../../../../utils'\n\nconst useStyles = makeStyles((theme) => oStyle(theme, imgDesktop, imgMobile))\n\nconst Register = () => {\n  const classes = useStyles()\n\n  const dispatch = useDispatch()\n\n  const { addToast } = useToasts()\n\n  const { jobs, config } = useSelector((state) => state.home)\n  const user = useSelector((state) => state.user)\n\n  const messages = config.conf.messages.auth\n  const initValues = {\n    email: '',\n    password: '',\n    job: '',\n    showPassword: false\n  }\n  const [emailSent, setEmailSent] = useState(false)\n  const [values, setValues] = useState(initValues)\n  const [errEmail, setErrEmail] = useState(false)\n  const [errPassword, setErrPassword] = useState(false)\n  const [errCgu, setErrCgu] = useState(false)\n\n  const onKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      catchSubmit(event)\n    }\n  }\n\n  const catchSubmit = (e) => {\n    e.preventDefault()\n\n    if (checkEmail(values.email) === false) { setErrEmail(true) }\n    if (checkPassword(values.password) === false) { setErrPassword(true) }\n\n    if ((errEmail || errPassword) === true) {\n      addToast(messages.register.error, { appearance: 'error' }); return false\n    } else {\n      if (!errCgu) {\n        addToast('Vous devez accepter les conditions generales d\\'utilisation', { appearance: 'error' }); return false\n      } else {\n        const respo = sendRequest()\n        respo.then((res) => {\n          addToast(res.message, { appearance: res.appearance })\n        })\n      }\n    }\n  }\n\n  const sendRequest = async () => {\n    const response = await registerCheck({\n      nom: 'none',\n      prenom: 'none',\n      email: values.email.toLowerCase(),\n      password: values.password,\n      job: '/api/jobs/' + values.job,\n      createdAt: new Date().toISOString(),\n      isEnabled: true\n    })\n\n    if (response === {}) {\n      return { message: messages.register.error, appearance: 'error' }\n    } else {\n      if (!emailSent) {\n        const mailing = await sendEmail(values.email, values.pseudo)\n        if (mailing.data !== 'OK') { console.log('Problem lors de lenvoie du mail') }\n        setEmailSent(true)\n      }\n\n      dispatch({ type: REGISTER_USER, email: values.email, passwd: values.password })\n      return { message: messages.register.success, appearance: 'success' }\n    }\n  }\n\n  const handleChange = prop => event => {\n    if (prop === 'email') {\n      if (checkEmail(event.target.value) === false) {\n        setErrEmail(true)\n      } else {\n        setErrEmail(false)\n      }\n    }\n\n    if (prop === 'password') {\n      if (checkPassword(event.target.value) === false) {\n        setErrPassword(true)\n      } else {\n        setErrPassword(false)\n      }\n    }\n\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  const switchToLogin = (e) => {\n    e.preventDefault()\n    dispatch({ type: LOGIN_FORM })\n  }\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword })\n  }\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault()\n  }\n\n  if (setup()) {\n    return <Redirect to='/cases' />\n  }\n\n  return (\n    <Grid container component='main' className={classes.root}>\n      <img className={classes.logo} alt='' src={logo} />\n      <Grid\n        item\n        xs={11}\n        sm={7}\n        md={7}\n        component={Paper}\n        elevation={6}\n        square\n        className={classes.login}\n      >\n        <div className={classes.paper}>\n          <Typography component='h1' variant='h5'>\n            Nouveau sur Dentiio ?\n          </Typography>\n          <br />\n          <Typography component='h3' variant='subtitle2'>\n            Saisissez vos informations pour continuer.\n          </Typography>\n          <br /><br />\n          <form className={classes.form} noValidate onSubmit={sendEmail}>\n            <InputLabel className='inputLabel'>\n              Vous êtes* :\n            </InputLabel>\n            <TextField\n              fullWidth\n              id='job'\n              select\n              value={values.job === '' ? 'none' : values.job}\n              onChange={handleChange('job')}\n              variant='outlined'\n            >\n              <MenuItem key='none' value='none' disabled>\n                {'Indiquez votre profession'}\n              </MenuItem>\n\n              {jobs && jobs.map(option => (\n                <MenuItem key={option.ident} value={option.id}>\n                  {option.name}\n                </MenuItem>\n              ))}\n            </TextField>\n            <br /><br />\n\n            <TextField\n              variant='outlined'\n              className='labelGrey'\n              margin='normal'\n              required\n              fullWidth\n              id='email'\n              label='Votre adresse email'\n              name='{{ customer_name }}'\n              autoComplete='email'\n              onKeyDown={(e) => e.keyCode !== 13 ? null : catchSubmit(e)}\n              onChange={handleChange('email')}\n              error={errEmail}\n              helperText={values.email !== '' ? (checkEmail(values.email) === false ? 'Email invalide!' : ' ') : ''}\n            />\n            <br /><br />\n\n            <FormControl fullWidth variant='outlined'>\n              <InputLabel htmlFor='outlined-adornment-password'>Votre mot de passe *</InputLabel>\n              <OutlinedInput\n                variant='outlined'\n                required\n                fullWidth\n                name='password'\n                label='Votre mot de passe *'\n                type={values.showPassword ? 'text' : 'password'}\n                value={values.password}\n                className='labelGreyPassword'\n                id='outlined-adornment-password'\n                autoComplete='on'\n                error={errPassword}\n                onKeyDown={(e) => e.keyCode !== 13 ? null : catchSubmit(e)}\n                onChange={handleChange('password')}\n                endAdornment={\n                  <InputAdornment position='start'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge='end'\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                onKeyUp={onKeyUp}\n              />\n            </FormControl>\n\n            <br />\n            <Typography component='p' color='textPrimary'>\n                8 caractères minimum, un caractère spécial, une majuscule\n            </Typography>\n\n            <br /><br />\n\n            <FormControlLabel\n              className='labelGreyAccept'\n\n              control={\n                <Switch\n                  checked={errCgu}\n                  onChange={(e) => { setErrCgu(e.target.checked) }}\n                  color='primary'\n                  name='is_medical_background'\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                  className='label'\n                />\n              }\n              label=\"J'accepte les Conditions générales de d'utilisation\"\n            />\n\n            <br /><br /><br />\n\n            <div onClick={(e) => (catchSubmit(e))}>\n              <GradientBtn\n                variant='contained'\n                type='submit'\n                description={'S\\'INSCRIRE'}\n                className='GradientBtn'\n              />\n            </div>\n            <br /><br /><br />\n            <Typography>\n              <span>\n                {' '}\n                  Déjà un compte ?{' '}\n                <Link href='#' onClick={(e) => switchToLogin(e)} color='primary'>\n                  {' '}\n                    Connectez-vous.{' '}\n                </Link>{' '}\n              </span>\n            </Typography>\n\n          </form>\n          <span>{user.message}</span>\n        </div>\n\n      </Grid>\n    </Grid>\n\n  )\n}\n\nexport default Register\n","const config = {\n  app: {\n\n  },\n\n  season: {\n\n  },\n\n  // apis\n  url: {\n    // apiGateway: process.env.REACT_APP_ || 'http://localhost'\n  },\n\n  cache: {\n    jobs: [],\n    currentCase: {\n      id: 'none',\n      type: 'none',\n      patient: {},\n      averageNote: 0,\n      commentaires: [{}],\n      conclusion: 'none',\n      createdAt: '2000-01)à1T00/00/00+02:00',\n      evolution: 'none',\n      // id:0,\n      isEnabled: 'false',\n      keyword: [{}],\n      notations: [{}],\n      observation: 'none',\n      pathologie: [{}],\n      presentation: 'none',\n      speciality: [{}],\n      symptome: [{}],\n      treatment: [],\n      treatmentPlan: 'none'\n\n    },\n    keywords: []\n\n  },\n\n  i18n: {\n\n  },\n\n  zendesk: {\n\n  },\n\n  analytics: {\n    id: 'UA-?-?'\n  },\n\n  googleTagManager: {\n    id: 'GTM-?????'\n  },\n\n  payment: {\n    // adyen/stripe/????: {\n    //   environment: process.env.REACT_APP_ || 'test',\n    //   originKey: process.env.REACT_APP_,\n    // }\n  },\n\n  ages: [\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\n    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\n    44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,\n    58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,\n    72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\n    86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100\n  ],\n  sexes: [\n    { id: 'M', name: 'Masculin' },\n    { id: 'F', name: 'Féminin' }\n  ],\n\n  messages: {\n    timeOut: '2000',\n    cases: {\n      error: \"Une erreur s'est produite\",\n      success: 'Le cas a été ajouté avec succès',\n      patientError: 'Une erreur est survenu à la création du patient',\n\n      favorite: {\n        add: {\n          error: 'Cas clinique non ajouté aux favoris, veuillez reessayer plus tard',\n          success: 'Ce cas clicnique est maintenant dans vos favoris'\n        },\n        delete: {\n          error: 'Le cas clinique n\\'a pas pu être retiré de vos favoris, veuillez reessayer plus tard',\n          success: 'Ce cas clicnique ne fais plus partie de vos favoris'\n        }\n      }\n    },\n    Profile: {\n      error: \"Une erreur s'est produite\",\n      success: 'Inscription réussie'\n    },\n    auth: {\n      register: {\n        error: \"L'adresse email existe déja veuillez en saisir une autre\",\n        success: 'Inscription réussie, Bonjour ! '\n      },\n      signin: {\n        error: 'Connexion échoué, vérifier votre saisie',\n        success: 'Connexion approuvé,  Bonjour ! ',\n        autoLogError: 'Une erreur est survenu lors d\\'une authentification'\n      },\n      card: {\n        error: 'Une erreur est survenue lors du chargement de votre carte',\n        success: 'Carte envoyé, vous serez notifié par mail une fois votre status validé ! ',\n        pending: 'Telechargement de votre carte en progression ...'\n      }\n    },\n    avatar: {\n      error: 'Une erreur est survenue',\n      success: 'Avatar modifié !',\n      pending: 'Votre avatar est en cours de chargement ...'\n    },\n    editUser: {\n      error: 'Une erreur est survenue',\n      success: 'Informations modifiées !',\n      pending: 'Votre avatar est en cours de chargement ...'\n    }\n  }\n}\n\nexport default config\n","import './signIn.scss'\n\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { useToasts } from 'react-toast-notifications'\n\nimport {\n  Paper,\n  Typography,\n  Link\n} from '@material-ui/core/'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport imgDesktop from '../../../../images/illus.png'\nimport imgMobile from '../../../../images/mobile-bg.svg'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport GradientBtn from '../../../UI/buttons/GradientBtn'\nimport oStyle from '../../../UI/ResponsiveDesign/AuthStyle'\nimport { SUBSCRIBE_FORM, LOG_USER, START_LOADER, STOP_LOADER } from '../../../../store/actions'\nimport { loginCheck } from '../../../../services/Users'\nimport { setup } from '../../../../services/Auth'\nimport config from '../../../../config'\nimport logo from '../../../../images/logo.svg'\nimport { errorApi } from '../../../../utils'\n\nconst useStyles = makeStyles((theme) => (oStyle(theme, imgDesktop, imgMobile)))\n\nconst SignIn = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const subscribeMsg = localStorage.getItem('authSubscribeMsg')\n  const { addToast } = useToasts()\n  const messages = config.messages.auth\n\n  const initValues = {\n    email: '',\n    password: '',\n    showPassword: false\n  }\n\n  const [values, setValues] = useState(initValues)\n  const [errEmail, setErrEmail] = useState(false)\n  const [errPassword, setErrPassword] = useState(false)\n\n  const onKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      catchSubmit(event)\n    }\n  }\n\n  const catchSubmit = async (e) => {\n    e.preventDefault()\n\n    if (values.password !== '' && values.email !== '') {\n      dispatch({ type: START_LOADER })\n      const response = await loginCheck(values.email, values.password)\n      dispatch({ type: STOP_LOADER })\n\n      if (errorApi().test(response)) {\n        addToast(messages.signin.error, { appearance: 'error' })\n      } else {\n        addToast(messages.signin.success, { appearance: 'success' })\n        dispatch({ type: LOG_USER, datas: response.datas })\n      }\n    } else {\n      setErrEmail(true)\n      setErrPassword(true)\n    }\n  }\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword })\n  }\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault()\n  }\n\n  const switchToSubscribe = (e) => {\n    e.preventDefault()\n    dispatch({ type: SUBSCRIBE_FORM })\n  }\n\n  if (setup()) {\n    return <Redirect to='/cases' />\n  };\n\n  return (\n    <>\n      <Grid container component='main' className={classes.root}>\n        <img className={classes.logo} alt='' src={logo} />\n        <Grid\n          item\n          xs={11}\n          sm={7}\n          md={7}\n          component={Paper}\n          elevation={6}\n          square\n          className={classes.login}\n        >\n          <div className={classes.paper}>\n            <Typography component='h1' variant='h5'>\n              J'ai déjà un compte Dentiio\n            </Typography>\n            <br /><br />\n            <form className={classes.form} noValidate>\n              <TextField\n                variant='outlined'\n                margin='normal'\n                required\n                fullWidth\n                autoFocus\n                name='email'\n                label='Adresse email'\n                type='text'\n                id='email'\n                autoComplete='current-email'\n                onChange={handleChange('email')}\n                error={errEmail}\n              />\n\n              <br /><br />\n\n              <OutlinedInput\n                variant='outlined'\n                required\n                fullWidth\n                name='password'\n                label='Mot de passe*'\n                type={values.showPassword ? 'text' : 'password'}\n                value={values.password}\n                id='outlined-adornment-password'\n                autoComplete='on'\n                placeholder='Mot de passe*'\n                error={errPassword}\n                onChange={handleChange('password')}\n                endAdornment={\n                  <InputAdornment position='start'>\n                    <IconButton\n                      aria-label='toggle password visibility'\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge='end'\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                onKeyUp={onKeyUp}\n              />\n\n              <br /><br /><br /><br />\n\n              <GradientBtn\n                variant='contained'\n                type='submit'\n                description='SE CONNECTER'\n                className='GradientBtn'\n                onClick={catchSubmit}\n              />\n\n              <br /><br /><br />\n              <Typography align='center'>\n                <span>\n                  <Link href='#' color='primary'>\n                    Mot de passe oublié ?\n                  </Link>\n                </span>\n              </Typography>\n              <br />\n              <br />\n              <Typography align='center'>\n                <span>\n                Nouveau sur Dentiio ?{' '}\n                  <Link href='#' onClick={(e) => switchToSubscribe(e)} color='primary'>\n                  Inscrivez-vous.\n                  </Link>\n                </span>\n              </Typography>\n            </form>\n          </div>\n          {subscribeMsg}\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default SignIn\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\nimport MuiDialogContent from '@material-ui/core/DialogContent'\nimport MuiDialogActions from '@material-ui/core/DialogActions'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport InfoIcon from '@material-ui/icons/Info'\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n})\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant='h6'>{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label='close' className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  )\n})\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent)\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions)\n\nexport default function StatusJustif () {\n  const [open, setOpen] = React.useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <IconButton color='primary' onClick={handleClickOpen} aria-label='upload picture' component='span'>\n        <InfoIcon />\n      </IconButton>\n      <Dialog onClose={handleClose} aria-labelledby='customized-dialog-title' open={open}>\n        <DialogTitle id='customized-dialog-title' onClose={handleClose}>\n                    Confirmez votre status\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom variant='subtitle1'>\n                        Validez votre inscription en soumettant tout document attestant que vous êtes\n                        un étudiant ou professionnel de la santé bucco-dentaire.<br />\n                        (exemple: certificat de scolarité, carte étudiante, CPS, contrat de travail, diplôme, etc.)\n          </Typography>\n          <br />\n          <Typography gutterBottom>\n                        Votre justificatif doit impérativement faire apparaître:\n          </Typography>\n          <ul>\n            <li>Votre nom et prénom</li>\n            <li>Votre spécialité ou votre statut</li>\n            <li>Votre affiliation à un ordre, faculté/école ou établissement de santé</li>\n          </ul>\n          <Typography gutterBottom>\n                        Si vous avez une question, n’hésitez pas à nous contacter sur : contact@dentiio.fr\n          </Typography>\n          <Typography gutterBottom variant='subtitle2' className='textCenter'>\n                    Aucune des informations fournies ne sera publiée. Celles-ci ne serviront qu'à valider votre profil par l'équipe Dentiio.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color='primary'>\n                        J'AI COMPRIS\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","import './status.scss'\n\nimport React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import { Redirect } from 'react-router-dom'\nimport { useToasts } from 'react-toast-notifications'\nimport {\n  Paper,\n  Typography,\n  Input\n} from '@material-ui/core/'\nimport Grid from '@material-ui/core/Grid'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport { makeStyles } from '@material-ui/core/styles'\nimport imgDesktop from '../../../../images/illus.png'\nimport imgMobile from '../../../../images/mobile-bg.svg'\nimport StatusJustif from '../../../UI/Modal/StatusJustif'\nimport GradientBtn from '../../../UI/buttons/GradientBtn'\nimport oStyle from '../../../UI/ResponsiveDesign/AuthStyle'\nimport { checkFiles, errorApi } from '../../../../utils'\n\nimport { loginCheck, getUserId, saveCard } from '../../../../services/Users'\n\nimport { LOG_USER, VALID_STATUS, FREE_CREDENTIALS } from '../../../../store/actions'\nimport logo from '../../../../images/logo.svg'\nimport config from '../../../../config'\n\nconst useStyles = makeStyles((theme) => (oStyle(theme, imgDesktop, imgMobile)))\n\nconst Status = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const { addToast } = useToasts()\n  const messages = config.messages.auth\n  const credentials = useSelector((state) => state.user.credentials)\n  const fileReader = new FileReader()\n\n  useEffect(() => {\n    if (credentials && credentials.email !== '') {\n      return async () => {\n        const isSignIn = await loginCheck(credentials.email, credentials.passwd)\n        if (isSignIn.datas !== undefined && !errorApi().test(isSignIn.datas)) {\n          dispatch({ type: LOG_USER, datas: isSignIn.datas })\n          dispatch({ type: FREE_CREDENTIALS })\n        } else {\n          addToast(messages.signin.autoLogError, { appearance: 'warning' })\n        }\n      }\n    }\n  })\n\n  const [errCard, setErrCard] = useState(false)\n\n  const catchSubmit = (e) => {\n    e.preventDefault()\n\n    if (errCard || document.querySelector('input').files[0] === undefined) {\n      return false\n    } else {\n      addToast(messages.card.pending, { appearance: 'info' })\n\n      const uploadFile = document.querySelector('input').files[0]\n\n      fileReader.onload = async (FileLoadEvent) => {\n        var base64 = FileLoadEvent.target.result\n\n        const response = await saveCard({\n          image: base64,\n          userId: getUserId()\n        })\n\n        if (response === 'OK') { addToast(messages.card.success, { appearance: 'success' }) } else { addToast(messages.card.error, { appearance: 'error' }) }\n      }\n\n      fileReader.readAsDataURL(uploadFile)\n\n      dispatch({ type: VALID_STATUS })\n    }\n  }\n\n  const handleChange = prop => event => {\n    const checkedFile = checkFiles(event)\n\n    if (checkedFile.error === true) {\n      setErrCard(checkedFile.message)\n    } else {\n      setErrCard(false)\n    }\n  }\n\n  return (\n    <>\n      <Grid container component='main' className={classes.root}>\n        <img className={classes.logo} alt='' src={logo} />\n        <Grid\n          item\n          xs={10}\n          sm={8}\n          md={8}\n          lg={5}\n          component={Paper}\n          elevation={6}\n          square\n          className={classes.login}\n        >\n          <div className={classes.paper}>\n            <Typography component='h1' variant='h5'>\n              Validez votre inscription\n            </Typography>\n            <br /><br />\n            <Typography component='h3' variant='subtitle2'>\n              Uploadez votre carte CPS, carte étudiante ou autre document qui montre que vous faites partie du milieu dentaire. <StatusJustif />\n            </Typography>\n            <br />\n            <form className={classes.form} noValidate>\n              <Input\n                type='file'\n                fullWidth\n                onKeyDown={(e) => e.keyCode !== 13 ? null : catchSubmit}\n                onChange={handleChange('cpsCard')}\n                name='cps'\n                id='cps'\n                required\n              />\n              <FormHelperText id='my-helper-text'>{errCard || ''}</FormHelperText>\n              <br /><br />\n\n              <div onClick={catchSubmit}>\n                <GradientBtn\n                  variant='contained'\n                  type='submit'\n                  description='ENVOYER'\n                  className='GradientBtn'\n                />\n              </div>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default Status\n","import axios from 'axios'\n\nconst JOBS = process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_JOBS\n\nexport const fetchJobs = async () => {\n  let responses = await axios\n    .get(JOBS)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n\n  return responses = responses.datas === undefined ? {} : responses\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        textAlign: 'center',\n        paddingTop: '10%'\n    },\n}));\n\nexport default function CircularIndeterminate() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CircularProgress />\n        </div>\n    );\n}\n","import './Home.scss'\n\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { JOB_LIST } from '../../store/actions'\nimport Register from '../../components/App/Auth/Register/Register'\nimport SignIn from '../../components/App/Auth/SignIn/SignIn'\nimport Status from '../../components/App/Auth/Status/Status'\nimport { fetchJobs } from '../../services/Jobs'\nimport Spinner from '../../components/UI/Dawers/Spinner'\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const home = useSelector((state) => state.home)\n  const loader = home.loader\n  const user = useSelector((state) => state.user)\n  const isLoaded = home.jobsLoaded\n  var form = home.login ? <Register /> : <SignIn />\n\n  if (user.subscribe === true) {\n    form = <Status />\n  }\n\n  if (loader === true) {\n    form = <Spinner />\n  }\n\n  const loadJobs = async () => {\n    const jobs = await fetchJobs()\n    if (jobs !== {}) { dispatch({ type: JOB_LIST, data: jobs.datas }) }\n  }\n\n  useEffect(() => {\n    if (!isLoaded && home.login) {\n      loadJobs()\n    }\n  })\n\n  return (\n    <div className='App'>\n      {form}\n    </div>\n  )\n}\n\nexport default Home\n","import axios from 'axios'\nimport { favOrCase } from '../utils'\n\nconst CLINICAL_CASES =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_CLINICAL_CASES\n\nconst FAVORITES =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_FAVORITES\n\nconst CLINICAL_CASES_BY_USER =\n    process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_USERS\n\nexport const fetchCases = (page = 1) => {\n  const responses = axios\n    .get(CLINICAL_CASES + '?page=' + page)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member'],\n      items: res.data['hydra:totalItems']\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses\n}\n\nexport const addFavCase = async (data, userId) => {\n  const item = {\n    userId: '/api/users/' + userId,\n    clinicalCaseId: data['@id'],\n    createdAt: new Date().toISOString()\n  }\n  let responses = await axios\n    .post(FAVORITES, item)\n    .then((res) => ({\n      datas: res.status\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses = responses.datas !== 201 ? 'Error' : 'Created'\n}\n\nexport const removeFavCase = async (data, userId) => {\n  const allFavCase = await fetchUserFav(userId)\n\n  const favMatch = allFavCase.datas.filter((fav) => {\n    let caseId = favOrCase(fav)\n    return caseId === data.id\n  })\n\n  const favId = favMatch[0].id\n\n  const responses = await axios\n    .delete(FAVORITES + '/' + favId)\n    .then((res) => ({\n      datas: res.status\n    }))\n    .catch((e) => JSON.stringify(e))\n\n  return responses.datas\n}\n\nexport const getCaseById = (id) => {\n  const responses = axios\n    .get(CLINICAL_CASES + '/' + id)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses\n}\n\nexport const getCaseByUserId = (id) => {\n  const responses = axios\n    .get(CLINICAL_CASES_BY_USER + '/' + id + '/' + process.env.REACT_APP_CLINICAL_CASES)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses\n}\n\nexport const fetchUserFav = (userId) => {\n  const USERFAVORITES =\n    process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_USERS + '/' + userId + '/' + process.env.REACT_APP_FAVORITES\n\n  const responses = axios\n    .get(USERFAVORITES)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses\n}\n\nexport const postCase = (values, patient) => {\n  const item = {\n    age: values.ages,\n    smoking: values.isASmoker,\n    /* drinking: values.isDrinker, */\n    presentation: values.summary,\n    treatmentPlan: 'Plan de traitement',\n    observation: values.global_desc,\n    evolution: values.evolution,\n    conclusion: values.conclusion,\n    createdAt: new Date().toISOString(),\n\n    isEnabled: true,\n\n    patient: { patient },\n    symptome: values.symptomes,\n    treatment: values.treatment,\n    pathologie: values.pathologie,\n    speciality: values.specialities,\n    title: values.title,\n    slug: '/',\n    /*\n    \"imageClinicalCases\": [\n      \"string\"\n    ], */\n    keyword: values.keywords\n  }\n\n  const responses = axios\n    .post(CLINICAL_CASES, item)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses\n}\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport Button from '@material-ui/core/Button'\nimport StarIcon from '@material-ui/icons/Star'\nimport { addFavCase, removeFavCase } from '../../../../services/Cases'\nimport { ADD_FAVORITE, REMOVE_FAVORITE } from '../../../../store/actions'\nimport { useToasts } from 'react-toast-notifications'\nimport { getUserId } from '../../../../services/Users'\n\nconst FavButton = (props) => {\n  const userId = getUserId()\n  const { addToast } = useToasts()\n  const dispatch = useDispatch()\n\n  const { config } = useSelector((state) => state.home)\n  // const favorites = useSelector((state) => state.cases.favorites)\n  const [toggle, setToggle] = useState(<StarBorderIcon color='primary' />)\n\n  const messages = config.conf.messages.cases.favorite\n\n  useEffect(() => {\n    if (props.isFavorite) {\n      setToggle(<StarIcon fontSize='default' color='primary' />)\n    }\n  }, [props])\n\n  const HandleFav = async (item) => {\n    const addOrDelete = props.isFavorite ? removeFavCase : addFavCase\n    const response = await addOrDelete(item, userId)\n\n    if (typeof response === 'string') {\n      if (response === 'Error') {\n        addToast(messages.add.error, { appearance: 'error' })\n      } else {\n        addToast(messages.add.success, { appearance: 'success' })\n        dispatch({ type: ADD_FAVORITE, datas: item })\n      }\n    } else {\n      if (response === 204) {\n        addToast(messages.delete.success, { appearance: 'success' })\n        dispatch({ type: REMOVE_FAVORITE, datas: item })\n      } else {\n        addToast(messages.delete.error, { appearance: 'error' })\n      }\n    }\n  }\n\n  const handleChange = prop => event => {\n    HandleFav(props.value)\n  }\n\n  return (\n    <Button\n      key={props.value.id}\n      variant='contained'\n      style={{ float: 'right', backgroundColor: 'white' }}\n      onClick={handleChange('')}\n    >\n      {toggle}\n    </Button>\n  )\n}\n\nexport default FavButton\n","import Avatar from 'avataaars'\nimport React from 'react'\n\nconst UserAvatar = (props) => {\n  if (props.avatar) {\n    return (\n      <Avatar\n        style={{ width: props.width, height: props.width }}\n        avatarStyle='Circle'\n        topType={props.avatar.topType}\n        accessoriesType={props.avatar.accessoriesType}\n        hairColor={props.avatar.hairColor}\n        facialHairType={props.avatar.facialHairType}\n        facialHairColor={props.avatar.facialHairColor}\n        clotheType={props.avatar.clotheType}\n        clotheColor={props.avatar.clotheColor}\n        eyeType={props.avatar.eyeType}\n        eyebrowType={props.avatar.eyebrowType}\n        mouthType={props.avatar.mouthType}\n        skinColor={props.avatar.skinColor}\n      />\n    )\n  }\n  return false\n}\n\nexport default UserAvatar\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  keyword: {\n    color: 'white',\n    borderRadius: 20,\n    fontSize: 11,\n    textTransform: 'capitalize',\n    marginLeft: '5px'\n  }\n})\n\nconst Keywords = (props) => {\n  const classes = useStyles()\n\n  return (\n    <Button variant='contained' size='small' color='primary' className={classes.keyword}>\n      {props.keyword}\n    </Button>\n  )\n}\n\nexport default Keywords\n","import './caseItem.scss'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Typography from '@material-ui/core/Typography'\nimport FavButton from '../../../UI/buttons/FavButton/FavButton'\nimport UserAvatar from '../../../UI/Avatars/UserAvatar'\nimport { avgNotes } from '../../../../utils'\nimport Keyword from '../../../UI/buttons/Keywords/keywords'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst CasesItem = (props) => {\n  const img = () => {\n    if (props.item.imageClinicalCases) {\n      return props.item.imageClinicalCases.filter(function (i) {\n        return i.type.name === 'principal'\n      }).map(function (img) {\n        return img.path\n      })\n    }\n  }\n\n  return (\n    <Card className='root' key={props.item.id}>\n      <FavButton alt='favorite' value={props.item} isFavorite={props.favorite} />\n      <Link to={`/case/${props.item.id}`} style={{ textDecoration: 'none' }}>\n        <CardMedia\n          className='media'\n          image={'https://api.dentiio.fr/images/' + img()[0]}\n          title={props.item.title}\n        />\n        <div style={{ marginTop: '-35px', marginLeft: '15px' }}>\n          {props.item.keyword.map((keyword, index) => (\n            <Keyword key={index} keyword={keyword.name} />\n          ))}\n        </div>\n        <CardContent>\n          <Typography variant='h6' style={{ color: 'black' }} component='p' className='title'>\n            {props.item.title}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p' className='presentation'>\n            {props.item.presentation}\n          </Typography>\n        </CardContent>\n        <br />\n        <CardActions disableSpacing>\n          <UserAvatar avatar={props.item.user.avatar} width='50px' />\n          <Typography variant='body2' style={{ color: 'black', textTransform: 'capitalize' }} component='p'>\n            {props.item.user.pseudo}\n            <br />\n            {props.item.user.job.name}\n          </Typography>\n          <div className='grow' style={{ align: 'right' }} />\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {props.item.commentaires.length}\n          </Typography>\n          <ChatIcon color='primary' fontSize='default' className='pr-15' />\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {(isNaN(props.item.notations) ? avgNotes(props.item.notations) : 'Aucune note')}\n          </Typography>\n          {(isNaN(props.item.notations) ?\n                  <StarIcon color='primary' fontSize='default' /> :\n                  <StarBorderIcon color='primary' fontSize='default' />\n          )}\n\n        </CardActions>\n      </Link>\n    </Card>\n  )\n}\n\nexport default CasesItem\n","export const avgNotes = (notes) => {\n  var sum = 0\n  notes.map((value, index) => (\n    sum = value.note + sum\n  ))\n\n  return sum / notes.length\n}\n","import './paginator.js.scss'\nimport React from 'react'\n\nconst linksTab = []\nconst Paginator = (props) => {\n  for (let i = 1; i < (props.pages + 1); i++) {\n    if (linksTab.length < props.pages) {\n      linksTab.push(\n        <button type='button' id='paginator' name='paginator' onClick={props.onChange('paginator')} key={i} value={i}> {i} </button>\n      )\n    }\n  }\n\n  return (\n    <>\n      {linksTab.map((item) => (\n        <>{item}</>\n      ))}\n    </>\n  )\n}\n\nexport default Paginator\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { fetchCases, fetchUserFav } from '../../../../services/Cases'\nimport { CASES_LIST, INIT_FAV_CASE } from '../../../../store/actions'\nimport CasesItem from '../CaseItem/CaseItem'\nimport Paginator from '../../../UI/Paginator/Paginator'\nimport titleSvg from '../../../../images/maquette/c-case-title.svg'\nimport { getUserId } from '../../../../services/Users'\nimport { errorApi } from '../../../../utils'\nimport Spinner from '../../../../components/UI/Dawers/Spinner'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(3)\n    }\n  }\n}))\n\nconst CasesList = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const userId = getUserId()\n\n  const caseSelector = useSelector((state) => state.cases)\n\n  const casesList = caseSelector.casesList\n  const casesFiltred = caseSelector.casesFiltred\n  const cases = casesFiltred.length > 0 ? casesFiltred : casesList\n\n  const nbrCases = caseSelector.nbrCases\n  const areLoaded = caseSelector.casesLoaded\n  const favorites = caseSelector.favorites\n  const pages = Math.round(nbrCases / 30)\n\n  const initValues = {\n    paginator: 1\n  }\n\n  const [values, setValues] = useState(initValues)\n\n  useEffect(() => {\n\n    const getCases = async () => {\n      const fetch = await fetchCases(values.paginator)\n      if (fetch.message !== undefined && !errorApi().test(fetch.message)) {\n        dispatch({ type: CASES_LIST, datas: fetch.datas, nbrItems: fetch.items })\n      }\n    }\n\n    const initUserFav = async () => {\n      const response = await fetchUserFav(userId)\n      if (!errorApi().test(response)) {\n        dispatch({ type: INIT_FAV_CASE, datas: response.datas })\n      }\n    }\n\n    if (cases && cases.length < 1) { initUserFav() } getCases()\n    if (favorites && favorites.length < 1) { initUserFav() }\n  }, [userId, dispatch, cases, values, favorites])\n\n\n  const handleChange = prop => event => {\n    setValues({ ...values, paginator: event.target.value })\n  }\n\n  if (cases.length < 1) {\n    return (<Spinner />)\n  } else {\n    return (\n      <>\n        <Container maxWidth='lg'>\n          <center><img src={titleSvg} alt='Cas Cliniques' /></center>\n          <Paginator pages={pages} onChange={handleChange} current={values.paginator} /> {cases.length > 0 ? '[page ' + values.paginator + ']' : ''}\n          <div className={classes.root}>\n            {areLoaded && cases.map((oCase, index) => {\n              var isFavorite = false\n              if (favorites.length > 0) {\n                favorites.map((item) => {\n                  var slashIndex = item.clinicalCaseId !== undefined ? item.clinicalCaseId.lastIndexOf('/') : false\n                  var caseId = slashIndex ? Number(item.clinicalCaseId.substr(slashIndex).substr(1, slashIndex.length)) : item.user.id\n                  if (caseId === oCase.id) { isFavorite = true }\n                  return isFavorite\n                })\n              }\n\n              return <CasesItem key={index} item={oCase} favorite={isFavorite} />\n            })}\n          </div>\n          <Paginator pages={pages} onChange={handleChange} current={values.paginator} />\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default CasesList\n","\nconst Palette = {\n  primary: '#03B6F0',\n  secondary: '#f50057',\n  white: '#ffffff',\n  grey: 'grey'\n}\n\nexport default Palette\n","import React from 'react'\nimport './titleHeader.scss'\nimport Icon from '../../../images/titleHeader.svg'\nimport { Link } from 'react-router-dom'\n\nfunction titleHeader () {\n  return (\n\n    <Link to='/cases'>\n      <img className='titleHeader' alt='' src={Icon} />\n    </Link>\n\n  )\n}\n\nexport default titleHeader\n","import React from 'react'\nimport './titleHeader.scss'\nimport Icon from '../../../images/titleHeaderMobile.svg'\n\nfunction titleHeaderMobile () {\n  return (\n    <>\n      <img className='titleHeaderMobile' alt='' src={Icon} />\n    </>\n  )\n}\n\nexport default titleHeaderMobile\n","import React from 'react'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport PostAddIcon from '@material-ui/icons/PostAdd'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory } from 'react-router-dom'\n\nconst Add = (props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const history = useHistory()\n  const isMenuOpen = Boolean(anchorEl)\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const goToPostCase = () => {\n    setAnchorEl(null)\n    history.push('/post-case')\n  }\n\n  const goToPostQuestion = () => {\n    setAnchorEl(null)\n    history.push('/post-question')\n  }\n\n  const menuId = 'primary-search-account-menu'\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={goToPostCase}>\n        <PostAddIcon color='primary' profile={props.profileId} fontSize='large' img={props.profileImg} />\n        <Typography component='p' variant='subtitle1'>\n          <strong> Publier</strong> un cas clinique\n        </Typography>\n      </MenuItem>\n      <MenuItem onClick={goToPostQuestion}>\n        <HelpOutlineIcon color='primary' profile={props.profileId} fontSize='large' img={props.profileImg} />\n        <Typography component='p' variant='subtitle1'>\n          <strong> Poser</strong> votre question à la communauté\n        </Typography>\n      </MenuItem>\n    </Menu>\n  )\n\n  return (\n    <>\n      <IconButton\n        aria-haspopup='true'\n        aria-controls={menuId}\n        onClick={handleProfileMenuOpen}\n        aria-label='show new notifications'\n        color='inherit'\n      >\n        <AddCircleOutlineIcon fontSize='large' htmlColor={props.color} />\n      </IconButton>\n      {renderMenu}\n    </>\n  )\n}\n\nexport default Add\n","import React from 'react'\nimport HomeIcon from '@material-ui/icons/Home'\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst home = (props) => {\n  if (props.target === 'home') {\n    return (\n      <IconButton color='inherit' aria-label='menu'>\n        <HomeIcon fontSize='large' htmlColor={props.color} />\n      </IconButton>\n    )\n  }\n  return (\n    <IconButton color='inherit' aria-label='menu'>\n      <HomeOutlinedIcon fontSize='large' htmlColor={props.color} />\n    </IconButton>\n  )\n}\n\nexport default home\n","import React from 'react'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport StarIcon from '@material-ui/icons/Star'\nimport IconButton from '@material-ui/core/IconButton'\nconst favorites = (props) => {\n  if (props.target === 'favorites') {\n    return (\n      <IconButton aria-label='favorite of current user' color='inherit'>\n        <StarIcon fontSize='large' htmlColor={props.color} />\n      </IconButton>\n    )\n  }\n  return (\n    <IconButton aria-label='favorite of current user' color='inherit'>\n      <StarBorderIcon fontSize='large' htmlColor={props.color} />\n    </IconButton>\n  )\n}\n\nexport default favorites\n","import React from 'react'\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity'\n// import PersonIcon from '@material-ui/icons/Person'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst iconProfile = (props) => {\n  const Img = () => {\n    if (props.profileImg === undefined) {\n      return (\n        <PermIdentityIcon fontSize='large' htmlColor={props.color} />\n      )\n    }\n    return (\n      <img src={props.profileImg} alt='Icon profile' />\n    )\n  }\n\n  return (\n    <IconButton\n      aria-label='account of current user'\n      aria-haspopup='true'\n      color='inherit'\n    >\n      <Img />\n    </IconButton>\n  )\n}\n\nexport default iconProfile\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst iconNotifSubject = (props) => {\n  const Img = () => {\n    if (props.profileImg === undefined) {\n      return (\n        <></>\n      )\n    }\n    return (\n      <img src={props.profileImg} alt='' />\n    )\n  }\n\n  return (\n    <IconButton\n      aria-label='subject notif'\n      aria-haspopup='true'\n      color='inherit'\n    >\n      <Img />\n    </IconButton>\n  )\n}\n\nexport default iconNotifSubject\n","import React from 'react'\n// import NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined'\nimport Badge from '@material-ui/core/Badge'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport palette from '../../ColorTheme/Palette'\nimport IconProfile from '../Profile/iconProfile'\nimport Typography from '@material-ui/core/Typography'\nimport IconNotifSubject from '../../Icon/iconNotifSubject/iconNotifSubject'\n\nconst Notification = (props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const isMenuOpen = Boolean(anchorEl)\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n  }\n\n  const menuId = 'primary-search-account-menu'\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>\n        <IconProfile color={palette.primary} profile={props.profileId} img={props.profileImg} />\n        <Typography component='p' variant='subtitle1'>\n          <strong>Nikita</strong>\n          <br />\n          a commenté votre cas\n        </Typography>\n        <IconNotifSubject />\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <IconProfile color={palette.primary} profile={props.profileId} img={props.profileImg} />\n        <Typography component='p' variant='subtitle1'>\n          <strong>Nikita</strong>\n          <br />\n          a commenté votre cas\n        </Typography>\n        <IconNotifSubject />\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose}>\n        <IconProfile color={palette.primary} profile={props.profileId} img={props.profileImg} />\n        <Typography component='p' variant='subtitle1'>\n          <strong>Nikita</strong>\n          <br />\n          a commenté votre cas\n        </Typography>\n        <IconNotifSubject />\n      </MenuItem>\n    </Menu>\n  )\n\n  return (\n    <>\n      <IconButton\n        aria-haspopup='true'\n        aria-controls={menuId}\n        onClick={handleProfileMenuOpen}\n        aria-label='show new notifications'\n        color='inherit'\n      >\n        <Badge badgeContent={17} color='secondary'>\n          <NotificationsOutlinedIcon fontSize='large' htmlColor={props.color} />\n        </Badge>\n      </IconButton>\n      {renderMenu}\n    </>\n  )\n}\n\nexport default Notification\n","import { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport palette from '../ColorTheme/Palette'\nimport AddIcon from '../Icon/Header/Add'\nimport FavoritesIcon from '../Icon/Header/favorites'\nimport HomeIcon from '../Icon/Header/home'\nimport NotificationIcon from '../Icon/Header/notification'\nimport UserAvatar from '../Avatars/UserAvatar'\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobileTop: {\n    display: 'flex',\n    position: 'fixed',\n    top: 0,\n    zIndex: 11,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  sectionMobileBottom: {\n    display: 'flex',\n    position: 'fixed',\n    top: 'auto',\n    bottom: 0,\n    height: 50,\n    zIndex: 11,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  right: {\n    position: 'absolute',\n    right: '0'\n  },\n  avatar: {\n    paddingTop: '50px!important'\n  }\n}))\n\nexport const RightMenuIcon = (props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.right}>\n      <div className={classes.grow} style={{ align: 'right' }} />\n      <div style={{ align: 'right' }}>\n        <Link to='/cases'>\n          <HomeIcon target={props.target} color={palette.white} />\n        </Link>\n        <Link to='/favorites'>\n          <FavoritesIcon target={props.target} color={palette.white} />\n        </Link>\n        <NotificationIcon color={palette.white} />\n        <Link to='/profile'>\n          <Button>\n            <UserAvatar width={'40px'} avatar={props.avatar} />\n          </Button>\n        </Link>\n        <AddIcon color={palette.white} />\n      </div>\n    </div>\n  )\n}\n\nexport default RightMenuIcon\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport palette from '../../UI/ColorTheme/Palette'\nimport TitleHeader from '../../UI/titleHeader/TitleHeader'\nimport TitleHeaderMobile from '../../UI/titleHeader/titleHeaderMobile'\nimport AddIcon from '../../UI/Icon/Header/Add'\nimport HomeIcon from '../../UI/Icon/Header/home'\nimport FavoritesIcon from '../../UI/Icon/Header/favorites'\nimport NotificationIcon from '../../UI/Icon/Header/notification'\nimport RightMenuIcon from '../../UI/RightMenuIcon/rightMenuIcon'\nimport UserAvatar from '../../UI/Avatars/UserAvatar'\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sectionMobileTop: {\n    display: 'flex',\n    position: 'fixed',\n    top: 0,\n    zIndex: 11,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  sectionMobileBottom: {\n    display: 'flex',\n    position: 'fixed',\n    top: 'auto',\n    bottom: 0,\n    height: 50,\n    zIndex: 11,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  }\n}))\n\nexport const Header = (props) => {\n  const classes = useStyles()\n  const currents_user = useSelector((state) => (state.user.current_user))\n\n  return (\n    <div className={classes.grow}>\n\n      <AppBar\n        position='static'\n        color='primary'\n      >\n        <Toolbar>\n          <TitleHeader style={{ align: 'center' }} />\n          <RightMenuIcon target={props.target} avatar={currents_user.avatar} />\n        </Toolbar>\n      </AppBar>\n\n      {/* Mobile header */}\n      <AppBar\n        position='static'\n        className={classes.sectionMobileTop}\n        color='inherit'\n      >\n        <Toolbar>\n          <TitleHeaderMobile style={{ align: 'center' }} />\n          <div className={classes.grow} style={{ align: 'right' }} />\n          <div>\n            <NotificationIcon color={palette.primary} />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <AppBar className={classes.sectionMobileBottom} color='inherit'>\n        <Toolbar>\n          <AddIcon color={palette.primary} />\n          <div className={classes.grow} style={{ align: 'right' }} />\n          <Link to='/cases'>\n            <HomeIcon target={props.target} color={palette.primary} />\n          </Link>\n          <div className={classes.grow} style={{ align: 'right' }} />\n          <Link to='/favorites'>\n            <FavoritesIcon target={props.target} color={palette.primary} />\n          </Link>\n          <div className={classes.grow} style={{ align: 'right' }} />\n          <Link to='/profile'>\n            <UserAvatar width={'40px'} avatar={currents_user.avatar} />\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default Header\n","import axios from 'axios'\n\nconst KEYWORDS =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_KEYWORDS\n\nconst SPECIALITIES =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_SPECIALITIES\n\nconst TREATMENTS =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_TREATMENTS\n\nconst PATHOLOGIES =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_PATHOLOGIES\n\nconst SYMPTOMES =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_SYMPTOMES\n\nexport const fetchKeywords = async () => {\n  let responses = await axios\n    .get(KEYWORDS)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n\n  return responses = responses.datas === undefined ? [] : responses\n}\n\nexport const fetchSpecialities = () => {\n  const responses = axios\n    .get(SPECIALITIES)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses\n}\n\nexport const fetchTreatments = () => {\n  const responses = axios\n    .get(TREATMENTS)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses\n}\n\nexport const fetchPathologies = () => {\n  const responses = axios\n    .get(PATHOLOGIES)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses\n}\n\nexport const fetchSymptomes = () => {\n  const responses = axios\n    .get(SYMPTOMES)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data['hydra:member']\n    }))\n    .catch((e) => JSON.stringify(e))\n  return responses\n}\n","import './CategorieCases.scss'\nimport React, { useEffect } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport Button from '@material-ui/core/Button'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListIcon from '@material-ui/icons/List'\nimport { fetchSpecialities, fetchCatPathologies } from '../../../store/actions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { Accordion, AccordionSummary } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n})\n\nexport default function TemporaryDrawer () {\n  const classes = useStyles()\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  })\n  const dispatch = useDispatch()\n  const specialities = useSelector((state) => state.specialities.specialities)\n  const catPathologies = useSelector((state) => state.catPathologies.catPathologies)\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return\n    }\n\n    setState({ ...state, [anchor]: open })\n  }\n\n  useEffect(() => {\n    if (specialities && specialities.length < 1) {\n      dispatch(fetchSpecialities())\n    }\n    if (catPathologies && catPathologies.length < 1) {\n      dispatch(fetchCatPathologies())\n    }\n  })\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n      })}\n      role='presentation'\n    >\n      <div className='flex'>\n        <div className='searchby'>\n                    Rechercher par\n        </div>\n        <div className='drawerHeader'>\n          <IconButton onClick={toggleDrawer('left', false)}>\n            <CloseIcon htmlColor='#fff' fontSize='default' />\n          </IconButton>\n        </div>\n      </div>\n\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          <ListItem>\n            <ListItemText primary='Pathologies' />\n          </ListItem>\n        </AccordionSummary>\n\n        <ListItem button className={classes.nested}>\n          <ListItemText />\n          <List>\n            {catPathologies &&\n                            catPathologies.map((catPathologie, index) => (\n                              <Accordion key={index}>\n                                <AccordionSummary expandIcon={<ExpandMore />}>\n                                  <ListItem>\n                                    <ListItemText primary={catPathologie.name} />\n                                  </ListItem>\n                                </AccordionSummary>\n                                <ListItem button className={classes.nested}>\n                                  <ListItemText />\n                                  <List>\n                                    <ListItem button key={index}>\n                                      <ListItemText primary='Toutes' />\n                                    </ListItem>\n                                    {catPathologie.pathologies &&\n                                            catPathologie.pathologies.map((pathologie, index) => (\n                                              <ListItem button key={index}>\n                                                <ListItemText primary={pathologie.name} />\n                                              </ListItem>\n                                            ))}\n                                  </List>\n                                </ListItem>\n                              </Accordion>\n                            ))}\n          </List>\n        </ListItem>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          <ListItem>\n            <ListItemText primary='Traitements' />\n          </ListItem>\n        </AccordionSummary>\n\n        <ListItem button className={classes.nested}>\n          <ListItemText />\n          <List>\n            {specialities &&\n                        specialities.map((specialitie, index) => (\n                          <Accordion key={index}>\n                            <AccordionSummary expandIcon={<ExpandMore />}>\n                              <ListItem>\n                                <ListItemText primary={specialitie.name} />\n                              </ListItem>\n                            </AccordionSummary>\n                            <ListItem button className={classes.nested}>\n                              <ListItemText />\n                              <List>\n                                <ListItem button key={index}>\n                                  <ListItemText primary='Tous' />\n                                </ListItem>\n                                {specialitie.treatments &&\n                                        specialitie.treatments.map((treatment, index) => (\n                                          <ListItem button key={index}>\n                                            <ListItemText primary={treatment.name} />\n                                          </ListItem>\n                                        ))}\n                              </List>\n                            </ListItem>\n                          </Accordion>\n                        ))}\n          </List>\n        </ListItem>\n      </Accordion>\n\n    </div>\n  )\n\n  return (\n    <div>\n      <React.Fragment key='left'>\n        <Button size='large' className='boutonCat' color='primary' variant='contained' onClick={toggleDrawer('left', true)}><ListIcon htmlColor='#fff' /></Button>\n        <Drawer anchor='left' open={state.left} onClose={toggleDrawer('left', false)}>\n          {list('left')}\n        </Drawer>\n      </React.Fragment>\n    </div>\n  )\n}\n","import fetchSpecialitiesData from '../../services/Specialities'\nimport { SET_SPECIALITIES } from '.'\n\nexport const fetchSpecialities = () => {\n  return async (dispatch) => {\n    const data = await fetchSpecialitiesData()\n    dispatch({ type: SET_SPECIALITIES, data: data.datas })\n  }\n}\n","import fetchCatPathologiesData from '../../services/CatPathologies'\nimport { SET_CAT_PATHOLOGIES } from '.'\n\nexport const fetchCatPathologies = () => {\n  return async (dispatch) => {\n    const data = await fetchCatPathologiesData()\n    dispatch({ type: SET_CAT_PATHOLOGIES, data: data.datas })\n  }\n}\n","import { TextField, makeStyles } from '@material-ui/core'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchKeywords } from '../../../../services/Home'\nimport { CASE_FILTERED, KEYWORDS_LIST } from '../../../../store/actions'\nimport './CasesSearch.scss'\nimport CategoriesCases from '../../Dawers/CategoriesCases'\n\nconst useStyles = makeStyles((theme) => ({\n  barWidth: {\n    minWidth: '50%',\n    width: '50%'\n  },\n\n  categoryButton: {\n    backgroundColor: '#82ccdd',\n    margin: '41px 10px 7px 10px',\n    height: '54px',\n    fontWeight: 'bold',\n    color: 'white',\n    '&:hover': {\n      backgroundColor: '#03B6F0'\n    }\n  }\n}))\n\nconst Search = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const initValues = {\n    keywords: []\n  }\n\n  const casesList = useSelector((state) => state.cases.casesList)\n  const [values, setValues] = useState(initValues)\n\n  const loadKeywords = async () => {\n    const keywordsLoad = await fetchKeywords()\n\n    if (keywordsLoad.datas.length > 1) {\n      setValues({ ...values, keywords: keywordsLoad.datas })\n      dispatch({ type: KEYWORDS_LIST, keywords: values.keywords })\n    }\n  }\n\n  // if no keywords in cache load keyword from api\n  if (values.keywords.length < 1) {\n    loadKeywords()\n  }\n\n  const onTextChanged = (e) => {\n    const value = e.target.value\n    var newdata = []\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, 'i')\n      casesList.map((item) => {\n        if (\n          item.keyword.filter((keyword) =>\n            regex.test(keyword.name.toLowerCase())\n          ).length > 0\n        ) {\n          newdata.push(item)\n        }\n        return true\n      })\n    }\n\n    dispatch({ type: CASE_FILTERED, datas: newdata })\n  }\n\n  const options = values.keywords.map((option) => {\n    const firstLetter = option.name[0].toUpperCase()\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...option\n    }\n  })\n\n  return (\n    <div className='wrap'>\n      <div className='search'>\n        <CategoriesCases className={classes.barWidth} />\n        <Autocomplete\n          className={classes.barWidth}\n          id='grouped-demo'\n          options={options.sort(\n            (a, b) => -b.firstLetter.localeCompare(a.firstLetter)\n          )}\n          groupBy={(option) => option.firstLetter}\n          getOptionLabel={(option) => option.name}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              onSelect={(e) => onTextChanged(e)}\n              onChange={(e) => onTextChanged(e)}\n              label='Rechercher un cas...'\n              variant='outlined'\n              id='search-input'\n              className='searchTerm'\n            />\n          )}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Search\n","import React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport CasesList from '../../components/App/Cases/CasesList/CasesList'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Header from '../../components/App/Header/Header'\nimport Search from '../../components/UI/Search/CasesSearch/CasesSearch'\nimport { setup } from '../../services/Auth'\nimport { getUserById, getUserId } from '../../services/Users'\nimport { SET_USER } from '../../store/actions'\n\nconst Cases = () => {\n  const dispatch = useDispatch()\n  const current_user = useSelector((state) => (state.user.current_user))\n  const [fetchUser, setFetchUser] = useState(false)\n\n\n  useEffect(() => {\n\n    const ResponseUser = async () => {\n      const response = await getUserById(getUserId())\n      if (Object.entries(response).length !== 0) {\n        setFetchUser(true)\n        dispatch({ type: SET_USER, datas: response.datas })\n      }\n    }\n\n    if (!fetchUser && Object.entries(current_user).length < 1) {ResponseUser()}\n    }, [fetchUser, current_user, dispatch])\n\n  if (setup()) {\n    return (\n      <>\n        <Header target='home' />\n        <Search />\n        <CasesList />\n      </>\n    )\n  } else {\n    return (<Redirect to='/' />)\n  }\n}\n\nexport default Cases\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Header from '../../components/App/Header/Header'\nimport Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { INIT_FAV_CASE, CASES_LIST } from '../../store/actions'\nimport CasesItem from '../../components/App/Cases/CaseItem/CaseItem'\nimport { fetchCases, fetchUserFav } from '../../services/Cases'\nimport { getUserId } from '../../services/Users'\nimport Spinner from '../../components/UI/Dawers/Spinner'\nimport { errorApi } from '../../utils'\nimport { setup } from '../../services/Auth'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(3)\n    }\n  }\n}))\n\nconst Favorites = () => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const casesList = useSelector((state) => state.cases.casesList)\n  const favorites = useSelector((state) => state.cases.favorites)\n  const userId = getUserId()\n\n  var favsIds = []; Object.keys(favorites).length > 0 && favorites.map((item) => {\n    // Si l'objet est un cas clinique on recupere l'id du cas clinique dans la chaine de caractère de la clé clinicalCaseId\n    const slashIndex = item.clinicalCaseId !== undefined ? item.clinicalCaseId.lastIndexOf('/') : false\n    const caseId = slashIndex ? Number(item.clinicalCaseId.substr(slashIndex).substr(1, slashIndex.length)) : 0\n    // Sinon si l'objet est un favorite on recupère l'id dans la clé id de l'obbjet favorite\n    return favsIds.push(caseId === 0 ? item.id : caseId)\n  })\n\n  var favoriteCases = []\n  casesList.length > 0 && casesList.map((item) => {\n    return favsIds.includes(item.id) ? favoriteCases.push(item) : false\n  })\n\n  const initUserFav = async () => {\n    const response = await fetchUserFav(userId)\n    return errorApi().test(response) ? null : dispatch({ type: INIT_FAV_CASE, datas: response.datas })\n  }\n\n  const getCases = async () => {\n    const fetch = await fetchCases()\n    if (fetch.message !== undefined && !errorApi().test(fetch.message)) {\n      dispatch({ type: CASES_LIST, datas: fetch.datas, nbrItems: fetch.items })\n    }\n  }\n\n  useEffect(() => {\n    if (Object.keys(favorites).length < 1) {\n      initUserFav()\n    }\n    if (casesList && casesList.length < 1) { getCases() }\n  })\n\n  if (setup()) {\n    if (casesList.length < 1) {\n      return (<><Header target='favorites' /><Spinner /></>)\n    } else {\n      return (\n        <>\n          <Header target='favorites' />\n          <Container maxWidth='lg'>\n            <center><span>Publications favorites</span></center>\n            <div className={classes.root}>\n              {\n                favoriteCases.length > 0 ? favoriteCases.map((oCase, index) => {\n                  return <CasesItem key={index} item={oCase} favorite />\n                }) : 'Vous n\\'avez pas de publication favorite'\n              }\n            </div>\n          </Container>\n        </>\n      )\n    }\n  }\n}\n\nexport default Favorites\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport EditIcon from '@material-ui/icons/Edit';\nimport {Link} from \"react-router-dom\";\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: '1px solid #d3d4d5',\n    },\n})((props) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n        {...props}\n    />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        '&:focus': {\n            backgroundColor: theme.palette.primary.main,\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n                color: theme.palette.common.white,\n            },\n        },\n    },\n}))(MenuItem);\n\nexport default function ParametersProfileButton() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const logout = () => {\n        localStorage.clear()\n        window.location.href = '/'\n    }\n\n    return (\n        <div>\n            <Button\n                aria-controls=\"customized-menu\"\n                aria-haspopup=\"true\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleClick}\n                startIcon={<SettingsIcon />}\n            >\n                 Paramètres\n            </Button>\n            <StyledMenu\n                id=\"customized-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <Link to='/profile/edit' style={{textDecoration: \"none\", color: '#000'}}>\n                    <StyledMenuItem>\n                        <ListItemIcon>\n                            <EditIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Modifier mes informations\" />\n                    </StyledMenuItem>\n                </Link>\n                <Link to='/avatar' style={{textDecoration: \"none\", color: '#000'}}>\n                    <StyledMenuItem>\n                        <ListItemIcon>\n                            <PersonIcon fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Modifier mon avatar\" />\n                    </StyledMenuItem>\n                </Link>\n                <StyledMenuItem onClick={logout}>\n                    <ListItemIcon>\n                        <ExitToAppIcon fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Se déconnecter\" />\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Header from '../../components/App/Header/Header'\nimport UserAvatar from '../../components/UI/Avatars/UserAvatar'\nimport { getUserId } from '../../services/Users'\nimport { getCaseByUserId } from '../../services/Cases'\nimport CasesItem from '../../components/App/Cases/CaseItem/CaseItem'\nimport Container from '@material-ui/core/Container'\nimport { Link } from 'react-router-dom'\nimport { setup } from '../../services/Auth'\nimport Spinner from '../../components/UI/Dawers/Spinner'\nimport ParametersProfileButton from \"../../components/UI/buttons/ParametersProfileButton\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '55px'\n  },\n  card: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    '& > *': {\n      margin: theme.spacing(3)\n    }\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: '80%'\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  },\n  large: {\n    width: theme.spacing(9),\n    height: theme.spacing(9),\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  },\n  flright: {\n    float: 'right'\n  },\n  flex: {\n    display: 'flex'\n  }\n}))\n\nconst Profile = () => {\n  const classes = useStyles()\n    const currents_user = useSelector((state) => (state.user.current_user))\n\n  const [cases, setCases] = useState({})\n\n\n  const ResponseCases = async () => {\n    const CaseById = await getCaseByUserId(getUserId())\n    setCases(CaseById.datas['hydra:member'])\n  }\n\n    useEffect(() => {\n        if (Object.entries(cases).length === 0) {\n            ResponseCases()\n        }\n    })\n\n    if (setup()) {\n        if (cases.length === undefined) {\n            return (<><Header target='profile'/><Spinner/></>)\n        } else {\n            return (\n                <>\n                    <Header target='profile'/>\n                    <div className={classes.root}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={2}>\n                                <Grid item style={{textAlign: \"center\"}}>\n                                    <Link to='/avatar'>\n                                        <Button>\n                                            <UserAvatar avatar={currents_user.avatar} width={\"150px\"}/>\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                                <Grid item xs={12} sm container>\n                                    <Grid item xs={12} sm container>\n                                        <Grid item xs container direction='column' spacing={2}>\n                                            <Grid item xs>\n                                                <Typography gutterBottom variant='h4'\n                                                            style={{textTransform: 'capitalize'}}>\n                                                    {currents_user && currents_user.pseudo}\n                                                </Typography>\n                                                <Typography variant='body2' color='textSecondary'>\n                                                    {currents_user && currents_user.job && currents_user.job.name}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item>\n                                            <ParametersProfileButton/>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </div>\n                    {Object.keys(cases).length !== 0 ?\n                      <Container maxWidth='lg'>\n                          <Typography component='h2' variant='h5' color='primary' style={{paddingTop: '20px'}}>\n                              <center>Cas publiés</center>\n                          </Typography>\n                          <div className={classes.card}>\n                              {cases.map((oCase, index) => {\n                                  return <CasesItem key={index} item={oCase}/>\n                              })}\n                          </div>\n                      </Container> : null\n                    }\n                </>\n            )\n        }\n    }\n\n     else {\n    window.location.href = '/'\n  }\n}\n\nexport default Profile\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('service-worker.js')\n    .then(function (reg) {\n    }).catch(function (err) {\n      console.log(\"No it didn't. This happened: \", err)\n    })\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import {\n  ADD_FAVORITE,\n  CLOSE_SIDE_BAR,\n  OPEN_SIDE_BAR,\n  INIT_FAV_CASE,\n  CASES_LIST,\n  CASE_FILTERED,\n  REMOVE_FAVORITE,\n} from '../actions'\n\nimport { favOrCase } from '../../utils'\n\nimport config from '../../config'\n\nconst INIT_STATE = {\n  cases: {},\n  casesFiltred: [],\n  casesList: [],\n  nbrCases: 1,\n  casesLoaded: false,\n  currentCase: config.cache.currentCase,\n  patient: {},\n  openSideBar: false,\n  favorites: []\n}\n\nexport const Cases = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case CASES_LIST:\n      return { ...state, casesList: action.datas, casesLoaded: true, nbrCases: action.nbrItems }\n\n    case CASE_FILTERED:\n      return { ...state, casesFiltred: action.datas }\n\n    case ADD_FAVORITE:\n      return { ...state, favorites: state.favorites.concat(action.datas) }\n\n    case REMOVE_FAVORITE:\n      let data = favOrCase(action.datas)\n      let newobject = state\n\n      state.favorites.map( (favType, index) =>{\n          let caseIndex = null \n\n          if (favType[\"@type\"] === 'ClinicalCase') {\n            caseIndex = favType.id\n          }\n          if (favType[\"@type\"] === 'Favorite') {\n            caseIndex = favOrCase(favType)\n          }\n\n          if (caseIndex === data) {\n            state.favorites.splice(index,1)\n            newobject = { ...state, favorites: state.favorites }\n          }\n\n          return null\n      })\n      \n      return newobject\n\n    case INIT_FAV_CASE:\n      return { ...state, favorites: action.datas }\n\n    case OPEN_SIDE_BAR:\n      return { ...state, openSideBar: true }\n\n    case CLOSE_SIDE_BAR:\n      return { ...state, openSideBar: false }\n\n    default:\n      return state\n  }\n}\n","\nimport conf from '../../config'\n\nconst INIT_STATE = {\n  loader: false,\n\n  jobsLoaded: false,\n  jobs: [],\n\n  users: [],\n\n  login: false,\n  config: { conf },\n  internet: false,\n\n  keywords: [],\n  specialities: [],\n  treatments: [],\n  pathologies: [],\n  symptomes: [],\n  level: '',\n  levelStepperPostCase: 0,\n}\n\nexport const Home = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case 'START_LOADER': return { ...state, loader: true }\n    case 'STOP_LOADER': return { ...state, loader: false }\n    case 'LOGIN_FORM': return { ...state, login: false }\n    case 'SUBSCRIBE_FORM': return { ...state, login: true }\n\n    case 'JOB_LIST': return { ...state, jobs: action.data, jobsLoaded: true }\n    case 'KEYWORDS_LIST': return { ...state, keywords: action.keywords }\n\n    case 'HOME_RESET': return { ...state, usersLoaded: false, casesLoaded: false, jobsLoaded: false }\n    case 'LOAD_INTERNET': return { ...state, internet: navigator.onLine }\n\n    case 'UPDATE_LEVEL': return { ...state, level: action.level }\n    case 'UPDATE_STEPPER_POSTCASE': return { ...state, levelStepperPostCase: action.levelStepperPostCase }\n    case 'SPECS_LIST': return { ...state, specialities: action.data }\n    case 'TREATMENTS_LIST' : return { ...state, treatments: action.data }\n    case 'PATHO_LIST' : return { ...state, pathologies: action.data }\n    case 'SYMPTOMES_LIST' : return { ...state, symptomes: action.data }\n    default:\n      return state\n  }\n}\n","import { LOG_USER, REGISTER_USER, VALID_STATUS, FREE_CREDENTIALS, SET_USER } from '../actions'\nimport jwtDecode from 'jwt-decode'\nimport { login } from '../../services/Auth'\n\nconst INIT_STATE = {\n  id: 0,\n  username: '',\n  current_user: {},\n  connected: false,\n  message: '',\n  subscribe: false,\n  credentials: {\n    email: '',\n    passwd: ''\n  }\n}\n\nexport const User = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case LOG_USER :\n      var details = jwtDecode(action.datas.data.token)\n      login(action.datas.data.token)\n      return { ...state, username: details.username, connected: true, id: details.userId }\n\n    case SET_USER :\n      return { ...state, current_user: action.datas }\n\n    case FREE_CREDENTIALS :\n      return { ...state, credentials: { email: '', passwd: '' } }\n\n    case REGISTER_USER : return { ...state, subscribe: true, credentials: { email: action.email, passwd: action.passwd } }\n\n    case VALID_STATUS :\n      return { ...state, subscribe: false }\n\n    default :\n      return state\n  }\n}\n","import { SET_SPECIALITIES } from '../actions'\n\nconst INIT_STATE = {\n  specialities: []\n}\n\nexport const Specialities = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case SET_SPECIALITIES:\n      return { ...state, specialities: action.data }\n    default:\n      return state\n  }\n}\n","import { SET_TREATMENTS } from '../actions'\n\nconst INIT_STATE = {\n  treatments: []\n}\n\nexport const Treatments = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case SET_TREATMENTS:\n      return { ...state, treatments: action.data }\n    default:\n      return state\n  }\n}\n","import { SET_PATHOLOGIES } from '../actions'\n\nconst INIT_STATE = {\n  pathologies: []\n}\n\nexport const Pathologies = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case SET_PATHOLOGIES:\n      return { ...state, pathologies: action.data }\n    default:\n      return state\n  }\n}\n","import { SET_CAT_PATHOLOGIES } from '../actions'\n\nconst INIT_STATE = {\n  catPathologies: []\n}\n\nexport const CatPathologies = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case SET_CAT_PATHOLOGIES:\n      return { ...state, catPathologies: action.data }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { Cases } from './casesReducer'\nimport { Home } from './homeReducer'\nimport { User } from './userReducer'\nimport { Specialities } from './specialitiesReducer'\nimport { Treatments } from './treatmentsReducer'\nimport { Pathologies } from './pathologiesReducer'\nimport { CatPathologies } from './catPathologiesReducer'\n\nexport const adminReducer = combineReducers({\n  cases: Cases,\n  user: User,\n  home: Home,\n  specialities: Specialities,\n  treatments: Treatments,\n  pathologies: Pathologies,\n  catPathologies: CatPathologies\n})\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst ColorTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#03B6F0',\n      light: '#fff'\n    },\n    secondary: {\n      main: '#f50057'\n    }\n  },\n  overrides: {\n    MuiTypography: {\n      colorTextPrimary: { color: 'grey', fontSize: '12px' }\n\n    }\n  }\n})\n\nexport default ColorTheme\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport './navbarDetail.scss'\nimport { useHistory } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-scroll'\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n      position: 'sticky',\n      top: 0,\n      width: '100%',\n      zIndex: 10\n    }\n  },\n  sectionMobile: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  detailnav: {\n    textDecoration: 'none'\n  }\n}))\n\nconst NavbarDetail = () => {\n  const classes = useStyles()\n  const history = useHistory()\n\n  return (\n    <>\n      <AppBar position='static' wrap='nowrap' color='inherit' className={classes.sectionDesktop}>\n        <Toolbar>\n          <IconButton onClick={() => history.goBack()}>\n            <ArrowBackIcon color='primary' />\n          </IconButton>\n          <div style={{ align: 'left' }}>\n            <Link\n              to='presentation'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-70}\n              duration={500}\n            >\n              <Button>\n                <span>Presentation</span>\n              </Button>\n            </Link>\n            <Link\n              to='examen'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-70}\n              duration={500}\n            >\n              <Button>\n                <span>Examen</span>\n              </Button>\n            </Link>\n            <Link\n              to='diagnostic'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-70}\n              duration={500}\n            >\n              <Button>\n                <span>Diagnostic</span>\n              </Button>\n            </Link>\n            <Link\n              to='plan'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-70}\n              duration={500}\n            >\n              <Button>\n                <span>Plan de traitement</span>\n              </Button>\n            </Link>\n            <Link\n              to='evolution'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-70}\n              duration={500}\n            >\n              <Button>\n                <span>Evolution</span>\n              </Button>\n            </Link>\n            <Link\n              to='conclusion'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-70}\n              duration={500}\n            >\n              <Button>\n                <span>Conclusion</span>\n              </Button>\n            </Link>\n            <Link\n              to='discussion'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-70}\n              duration={500}\n            >\n              <Button>\n                <span>Discussion</span>\n              </Button>\n            </Link>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <div className={classes.sectionMobile} id='sectionMobile'>\n        <div className='scrolling-wrapper'>\n          <div className='card'>\n            <IconButton onClick={() => history.goBack()}>\n              <ArrowBackIcon color='primary' />\n            </IconButton>\n          </div>\n          <div className='card'>\n            <Link\n              to='presentation'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-70}\n              duration={500}\n            >\n              <Button>\n                <span>Presentation</span>\n              </Button>\n            </Link>\n            <Link\n              to='examen'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-100}\n              duration={500}\n            >\n              <Button>\n                <span>Examen</span>\n              </Button>\n            </Link>\n          </div>\n          <div className='card'>\n            <Link\n              to='diagnostic'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-100}\n              duration={500}\n            >\n              <Button>\n                <span>Diagnostic</span>\n              </Button>\n            </Link>\n          </div>\n          <div className='card'>\n            <Link\n              to='plan'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-100}\n              duration={500}\n            >\n              <Button>\n                <span>Plan de traitement</span>\n              </Button>\n            </Link>\n          </div>\n          <div className='card'>\n            <Link\n              to='evolution'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-100}\n              duration={500}\n            >\n              <Button>\n                <span>Evolution</span>\n              </Button>\n            </Link>\n          </div>\n          <div className='card'>\n            <Link\n              to='conclusion'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-100}\n              duration={500}\n            >\n              <Button>\n                <span>Conclusion</span>\n              </Button>\n            </Link>\n          </div>\n          <div className='card'>\n            <Link\n              to='discussion'\n              className={classes.detailnav}\n              activeClass='active'\n              spy\n              smooth\n              offset={-100}\n              duration={500}\n            >\n              <Button>\n                <span>Discussion</span>\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default NavbarDetail\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Divider from '@material-ui/core/Divider'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableBody from '@material-ui/core/TableBody'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 200,\n    width: '23%',\n    height: 'fit-content',\n    marginTop: 50,\n    background: '#ffffff',\n    position: 'fixed',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      position: 'static',\n      marginTop: '0px'\n    }\n  },\n  content: {\n    textAlign: 'left',\n    overflowX: 'auto'\n  },\n  title: {\n    fontSize: 17\n  },\n  pos: {\n    marginBottom: 12,\n    marginTop: 12\n  }\n}))\n\nexport default function PatientDetail (props) {\n  const classes = useStyles()\n  const currentCase = useSelector((state) => state.cases.currentCase)\n\n  const smoker = props.data ? props.data.isASmoker === false ? 'Non' : 'Oui' : 'Non renseigné'\n  const drink = props.data ? props.data.isAlcool === false ? 'Non' : 'Oui' : 'Non renseigné'\n  const inTreatment = props.data ? props.data.inTreatment.empty ? 'Aucun traitement en cours' : 'Traitement en cours: ' : 'Non renseigné'\n  const treatment = props.data ? props.data.inTreatment.empty ? '' : props.data.inTreatment : ''\n  const problemHealth = props.data ? props.data.problemHealth.empty ? 'Aucun' : props.data.problemHealth : ''\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color='textSecondary' gutterBottom>\n                    Anamnèse\n        </Typography>\n        <Table className={classes.pos}>\n          <TableBody>\n            <TableRow>\n              <TableCell component='th' scope='row'>\n                                Age\n              </TableCell>\n              <TableCell align='left'>\n                {props.data && props.data.age} ans\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component='th' scope='row'>\n                                Sexe\n              </TableCell>\n              <TableCell align='left'>\n                {props.data && props.data.gender}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component='th' scope='row'>\n                                Alcool\n              </TableCell>\n              <TableCell align='left'>\n                {drink}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component='th' scope='row'>\n                                Fumeur\n              </TableCell>\n              <TableCell align='left'>\n                {smoker}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n        <Typography variant='body2' component='span'>\n          {inTreatment}\n          <br />\n          {treatment}\n        </Typography>\n\n        <Divider className={classes.pos} />\n        <Typography variant='body2' component='span'>\n                    Antécédents médicaux :<br />\n          {problemHealth}\n        </Typography>\n\n        <Divider className={classes.pos} />\n        <Typography variant='body2' component='span'>\n                    Alergies :<br />\n          {currentCase.allergen}\n                    Pollen et codéine\n        </Typography>\n      </CardContent>\n      <CardActions />\n    </Card>\n  )\n}\n","import React from 'react'\nimport ImageGallery from 'react-image-gallery'\n\nconst Gallery = (props) => {\n  return (\n    <ImageGallery items={props.images} />\n  )\n}\n\nexport default Gallery\n","import React, { Component } from 'react'\nimport Lightbox from 'react-image-lightbox'\nimport 'react-image-lightbox/style.css'\nimport Button from '@material-ui/core/Button'\nimport palette from '../ColorTheme/Palette'\n\nexport default class LightboxButton extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      photoIndex: 0,\n      isOpen: false\n    }\n  }\n\n  render () {\n    const { photoIndex, isOpen } = this.state\n    const images = this.props.images\n\n    return (\n      <div>\n        <Button onClick={() => this.setState({ isOpen: true })} style={{ color: palette.white, backgroundColor: palette.primary }}>\n                    Consulter la biopsy\n        </Button>\n\n        {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => this.setState({ isOpen: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length\n              })}\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })}\n          />\n        )}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport empty from '../../../../images/empty.png'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  media: {\n    height: 200\n  }\n})\n\nexport default function CardPlanTreatment (props) {\n  const classes = useStyles()\n\n  const Media = (props) => {\n    if (props.image.image !== undefined) {\n      return (\n        <CardMedia\n          className={classes.media}\n          image={props.image.image}\n          title={props.image.title}\n        />\n      )\n    }\n    return (\n      <CardMedia\n        className={classes.media}\n        image={empty}\n        title='Image manquante'\n      />\n    )\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <Media image={props} />\n        <CardContent>\n          <Typography gutterBottom variant='h6' component='h5'>\n            {props.title}\n          </Typography>\n          <Typography variant='body2' color='textSecondary' component='p'>\n            {props.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n","import React, {useEffect, useState} from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport {useDispatch} from \"react-redux\";\nimport {getUserById, getUserId} from \"../../../../services/Users\";\nimport {SET_USER} from \"../../../../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        '& > * + *': {\n            marginTop: theme.spacing(1),\n        },\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n}));\n\nexport default function RatingCase() {\n    const classes = useStyles();\n    const [user, setUser] = useState({})\n    const dispatch = useDispatch()\n\n\n    const ResponseUser = async () => {\n        const response = await getUserById(getUserId())\n        setUser(response.datas)\n\n        if (Object.entries(response).length !== 0) {\n            dispatch({ type: SET_USER, datas: response.datas })\n        }\n    }\n\n    useEffect(() => {\n        if (Object.entries(user).length === 0) {\n            ResponseUser()\n        }\n    })\n\n    const catchSubmit = async (e) => {\n        if(e !== undefined){\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant='h6'>\n                Noter ce cas\n            </Typography>\n            <Rating style={{alignSelf: 'center'}} name=\"half-rating\" defaultValue={4} precision={0.5} onClick={e => catchSubmit(e.target.value)}/>\n        </div>\n    );\n}\n","import React, {useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport './gallery.css'\nimport Header from '../../components/App/Header/Header'\nimport NavbarDetail from '../../components/App/Cases/DetailCase/NavbarDetail'\nimport PatientDetail from '../../components/App/Cases/DetailCase/PatientDetail'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport {makeStyles} from '@material-ui/core/styles'\nimport iconTeethFull from '../../images/icon/iconTeethFull.svg'\nimport IconProfile from '../../components/UI/Icon/Profile/iconProfile'\nimport palette from '../../components/UI/ColorTheme/Palette'\nimport Keyword from '../../components/UI/buttons/Keywords/keywords'\nimport Gallery from '../../components/UI/Gallery/Gallery'\nimport LightboxButton from '../../components/UI/Gallery/LightboxButton'\nimport CardPlanTreatment from '../../components/App/Cases/DetailCase/CardPlanTreatment'\nimport {getCaseById} from '../../services/Cases'\nimport {setup} from '../../services/Auth'\nimport RatingCase from \"../../components/App/Cases/DetailCase/Rating\";\nimport Spinner from \"../../components/UI/Dawers/Spinner\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '30px 10px 50px 10px',\n        border: 'none'\n    },\n    alignRight: {\n        textAlign: 'right'\n    },\n    subtitle: {\n        color: palette.grey,\n        paddingTop: 10\n    },\n    icon: {\n        paddingRight: 10,\n        marginTop: 2\n    },\n    resume: {\n        paddingTop: 20\n    },\n    profileName: {\n        textAlign: 'center',\n        margin: 0\n    },\n    textCenter: {\n        textAlign: 'center'\n    },\n    keywords: {\n        margin: '0 2px'\n    },\n    h3: {\n        marginTop: '50px',\n        marginBottom: '20px',\n        padding: '5px',\n        color: palette.primary,\n        borderBottom: '1px solid',\n        borderColor: palette.primary\n    },\n    fixed: {\n        position: 'fixed'\n    },\n    titleExam: {\n        margin: '30px 0 15px 0'\n    },\n    patientDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block'\n        }\n    },\n    patientMobile: {\n        display: 'block',\n        [theme.breakpoints.up('sm')]: {\n            display: 'none'\n        }\n    },\n    paddigTopTitle: {\n        paddingTop: '100px',\n        [theme.breakpoints.up('sm')]: {\n            paddingTop: '0'\n        }\n    }\n}))\n\nconst DetailCase = (props) => {\n    const classes = useStyles()\n    const [item, setItem] = useState({})\n\n    const ResponseCase = async () => {\n        const CaseById = await getCaseById(props.match.params.id)\n        setItem(CaseById.datas)\n    }\n\n    useEffect(() => {\n        if (Object.entries(item).length === 0) {\n            ResponseCase()\n        }\n    })\n\n    const optionsDate = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'}\n    const Img = item.averageNote ? <img alt='' src={iconTeethFull} width='12px' className={classes.icon}/> : ''\n\n    const imagesExamFirst = (type) => {\n        if (item.imageClinicalCases) {\n            const array = []\n            item.imageClinicalCases.filter(function (i) {\n                return i.type.name === type\n            }).map(function (img) {\n                    return array.push({\n                            original: 'https://api.dentiio.fr/images/' + img.path,\n                            thumbnail: 'https://api.dentiio.fr/images/' + img.path\n                        }\n                    )\n                }\n            )\n            item.imageClinicalCases.filter(function (i) {\n                return i.type.name === 'principal'\n            }).map(function (img) {\n                    return array.push({\n                            original: 'https://api.dentiio.fr/images/' + img.path,\n                            thumbnail: 'https://api.dentiio.fr/images/' + img.path\n                        }\n                    )\n                }\n            )\n            return array\n        }\n    }\n\n    const imagesExam = (type) => {\n        if (item.imageClinicalCases) {\n            const array = []\n            item.imageClinicalCases.filter(function (i) {\n                return i.type.name === type\n            }).map(function (img) {\n                    return array.push({\n                            original: 'https://api.dentiio.fr/images/' + img.path,\n                            thumbnail: 'https://api.dentiio.fr/images/' + img.path\n                        }\n                    )\n                }\n            )\n            return array\n        }\n    }\n\n    const imagesBiopsy = (type) => {\n        if (item.imageClinicalCases) {\n            const array = []\n            item.imageClinicalCases.filter(function (i) {\n                return i.type.name === type\n            }).map(function (img) {\n                    return array.push('https://api.dentiio.fr/images/' + img.path\n                    )\n                }\n            )\n            return array\n        }\n    }\n    const Scanner = () => {\n        if (imagesExam('scanner')) {\n            if (imagesExam('scanner').length !== 0) {\n                return (\n                    <>\n                        <Typography component='h3' variant='h5' className={classes.titleExam}>\n                            Scanner\n                        </Typography>\n                        <Gallery images={imagesExam('scanner')}/>\n                        <p>\n                            {item.scanner && item.scanner}\n                        </p>\n                    </>\n                )\n            }\n        }\n    }\n\n    const Evolution = () => {\n        if (imagesExam('evolution')) {\n            if (imagesExam('evolution').length !== 0) {\n                return (\n                    <>\n                        <Gallery images={imagesExam('evolution')}/>\n                    </>\n                )\n            }\n        }\n    }\n\n    const Biopsy = () => {\n        if (imagesExam('biopsy')) {\n            if (imagesExam('biopsy').length !== 0) {\n                return (\n                    <>\n                        <Typography component='h3' variant='h5' className={classes.titleExam}>\n                            Biopsy\n                        </Typography>\n                        <p>\n                            {item.biopsy && item.biopsy}\n                        </p>\n                        <LightboxButton images={imagesBiopsy('biopsy')}/>\n                    </>\n                )\n            }\n        }\n    }\n\n\n    if (setup()) {\n        if (Object.entries(item).length === 0) {\n            return (<><Header target=''/>\n              <NavbarDetail/>\n              <Spinner/></>)\n        } else {\n            return (\n                <>\n                    <Header target=''/>\n                    <NavbarDetail/>\n                    <div className={classes.root} id='presentation'>\n                        <Grid container spacing={1}>\n                            <Grid container item md={3} spacing={1}>\n                                <div className={classes.patientDesktop}>\n                                    <PatientDetail data={item.Patient && item.Patient}/>\n                                </div>\n                            </Grid>\n                            <Grid container item md={7} spacing={1}>\n                                <div className={classes.paddigTopTitle}>\n                                    <Typography component='h1' variant='h4'>\n                                        {item.title && item.title}\n                                    </Typography>\n                                    <Typography component='p' variant='body2' className={classes.subtitle}>\n                  <span style={{paddingRight: 20}}>\n                    {item.speciality && item.speciality.map((spe) => (\n                        spe.name + ', '\n                    ))}\n                  </span>\n                                        {Img}\n                                        {item.averageNote && item.averageNote} ({item.notations && item.notations.length} notes)\n                                    </Typography>\n                                    <Typography component='p' variant='body2' className={classes.subtitle}>\n                                        Publié\n                                        le {item.createdAt && new Date(item.createdAt).toLocaleDateString('fr-FR', optionsDate)}\n                                    </Typography>\n\n                                    <Grid container spacing={1} className={classes.resume}>\n                                        <Grid container item md={3} spacing={1} justify='center'>\n                                            <div className={classes.textCenter}>\n                                                <IconProfile color={palette.primary} profile={props.profileId}\n                                                             img={props.profileImg}/>\n                                                <p className={classes.profileName}\n                                                   style={{textTransform: 'capitalize'}}>\n                                                    {item.user && item.user.pseudo}\n                                                    <br/>\n                                                    <span className={classes.subtitle}>\n                          {item.user && item.user.job.name}\n                        </span>\n                                                </p>\n                                            </div>\n                                        </Grid>\n                                        <Grid container item md={9} spacing={1}>\n                                            <p>\n                                                {item.presentation && item.presentation}\n                                            </p>\n                                            {item.keyword && item.keyword.map((keyword, index) => (\n                                                <div key={index} className={classes.keywords}>\n                                                    <Keyword key={index} keyword={keyword.name}/>\n                                                </div>\n                                            ))}\n                                        </Grid>\n                                    </Grid>\n                                    <Typography component='h3' variant='h5' className={classes.h3}>\n                                        Motif de consultation\n                                    </Typography>\n                                    <p>\n                                        {item.reason_consult && item.reason_consult}\n                                        Les dents infero-anterieur ont une légère mobilité et sont douloureuses depuis\n                                        quelques jours.\n                                    </p>\n                                    <Typography component='h3' variant='body1'>\n                                        Les symptômes sont :\n                                        {item.symptome && item.symptome.map((keyword, index) => (\n                                            <div key={index} className={classes.keywords}>\n                                                <Keyword key={index} keyword={keyword.name}/>\n                                            </div>\n                                        ))}\n                                    </Typography>\n                                    <div className={classes.patientMobile}>\n                                        <PatientDetail/>\n                                    </div>\n                                    <Typography component='h3' variant='h5' className={classes.h3} id='examen'>\n                                        Examen clinique\n                                    </Typography>\n                                    {item.imageClinicalCases && <Gallery images={imagesExamFirst('examen')}/>}\n                                    <p>\n                                        {item.observation && item.observation}\n                                    </p>\n                                    <Typography component='h3' variant='h5' className={classes.h3}>\n                                        Examen complementaire\n                                    </Typography>\n                                    {/* si il y a scanner */}\n                                    {Scanner()}\n\n                                    {/* si il y a biopsy */}\n                                    {Biopsy()}\n\n                                    <Typography component='h3' variant='h5' className={classes.h3} id='diagnostic'>\n                                        Diagnostic\n                                    </Typography>\n                                    <p>\n                                        {item.diagnostic && item.diagnostic}\n                                    </p>\n                                    <Grid container item md={12} spacing={1}>\n                                        {item.pathologie && item.pathologie.map((keyword, index) => (\n                                            <div key={index} className={classes.keywords}>\n                                                <Keyword key={index} keyword={keyword.name}/>\n                                            </div>\n                                        ))}\n                                    </Grid>\n                                    <Typography component='h3' variant='h5' className={classes.h3} id='plan'>\n                                        Plan de traitement\n                                    </Typography>\n                                    <p>\n                                        {item.treatmentPlan && item.treatmentPlan}\n                                    </p>\n                                    <Grid container spacing={1} className={classes.resume}>\n                                        {item.imageClinicalCases && imagesExam('plan-de-traitement').map((img, index) => (\n                                            <Grid container item md={6} key={index} justify='center'>\n                                                <CardPlanTreatment title={index + 1} key={index} description=''\n                                                                   image={img.original}/>\n                                            </Grid>\n                                        ))}\n\n                                    </Grid>\n\n                                    <Typography component='h3' variant='h5' className={classes.h3} id='evolution'>\n                                        Evolution\n                                    </Typography>\n                                    <p>\n                                        {item.evolution && item.evolution}\n                                    </p>\n                                    {Evolution()}\n                                    <Typography component='h3' variant='h5' className={classes.h3} id='conclusion'>\n                                        Conclusion\n                                    </Typography>\n                                    <p>\n                                        {item.conclusion && item.conclusion}\n                                    </p>\n                                </div>\n                                <RatingCase/>\n\n                            </Grid>\n                            <Grid container className={classes.alignRight} item md={2} spacing={1}>\n                                <div>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </>\n            )\n        }\n    } else {\n        return (<Redirect to='/'/>)\n    }\n}\n\nexport default DetailCase\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport grey from '@material-ui/core/colors/grey'\nexport default function AlertDialog () {\n  const [open, setOpen] = React.useState(true)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>Lignes directrices pour la publication de cas cliniques</DialogTitle>\n        <DialogContent color={{ grey }}>\n          <ul>\n            <li>\n                                Supprimez toutes les informations d'identification du patient. Cela comprend les noms, les dates, les lieux, les visages, les tatouages ​​ou tout autre détail qui pourrait être utilisé pour identifier un patient.\n                                Veuillez vous référer à notre page d'identifiants pour une liste d'identifiants.\n            </li>\n            <br />\n            <li>\n                                Respectez les patients.\n            </li>\n            <br />\n            <li>\n                                Partagez uniquement les cas professionnels.\n            </li>\n            <br />\n            <li>\n                                Dentiio n'est pas destinée à partager vos propres conditions médicales, ni celles de votre famille ou de vos amis.\n            </li>\n          </ul>\n                        Tous les cas sont examinés avant d'être ajoutés à notre base de données. Les cas qui ne répondent pas à ces critères ne seront pas acceptés. Veuillez noter que toutes vos activités sur la Dentiio sont soumises à nos directives communautaires complètes et à nos conditions d'utilisation.\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary' variant='contained'>\n                        J'ai compris\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import './patient.scss'\nimport React, {useState} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {\n    Switch,\n    Typography,\n    Button\n} from '@material-ui/core/'\nimport Grid from '@material-ui/core/Grid'\nimport {makeStyles} from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport SmokingRoomsIcon from '@material-ui/icons/SmokingRooms'\nimport LocalBarIcon from '@material-ui/icons/LocalBar'\nimport config from '../../../../../config'\n\nimport oStyle from '../../../../UI/ResponsiveDesign/AuthStyle'\nimport { UPDATE_LEVEL, UPDATE_STEPPER_POSTCASE } from '../../../../../store/actions'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport InputLabel from '@material-ui/core/InputLabel'\n\n\nconst useStyles = makeStyles((theme) => (oStyle(theme)))\n\nconst Patient = (props) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const {ages, sexes} = config\n\n    const initVals = {\n        errAge: false,\n        errGender: false,\n        errReason_consultation: false\n    }\n    const [errors, setErrors] = useState(initVals)\n\n    const catchSubmit = async (event) => {\n        event.preventDefault()\n        let isValid = true\n        if (props.values.age === '') {\n            setErrors({...errors, errAge: true});\n            isValid = false\n        }\n        if (props.values.gender === '') {\n            setErrors({...errors, errGender: true});\n            isValid = false\n        }\n        if (props.values.reason_consultation === '') {\n            setErrors({...errors, errReason_consultation: true});\n            isValid = false\n        }\n        if (isValid) {\n            dispatch({type: UPDATE_LEVEL, level: 'exam'})\n            dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 1})\n        }\n    }\n\n    return (\n        <>\n            <form className={classes.form} noValidate>\n                <Typography component='h1' variant='h5'>\n                    <center>Information patient</center>\n                </Typography>\n                <Grid container item spacing={3} component='main'>\n                    <Grid item xs={12} sm={6}>\n                        <div className={classes.paper}>\n                            <TextField\n                                aria-label='minimum height'\n                                multiline\n                                rows={4}\n                                placeholder='Motif de la consultation'\n                                variant='outlined'\n                                margin='normal'\n                                label='Motif de la consultation'\n                                autoFocus\n                                required\n                                fullWidth\n                                name='reason_consultation'\n                                type='textarea'\n                                id='reason_consultation'\n                                value={props.values.reason_consultation}\n                                autoComplete='current-reason_consultation'\n                                onKeyDown={(e) => e.keyCode !== 13 ? null : catchSubmit(e)}\n                                onChange={props.onChange('reason_consultation')}\n                                error={errors.errReason_consultation}\n                            />\n                            <br/>\n                            <TextField\n                                className='textField'\n                                id='age'\n                                label='Age'\n                                select\n                                fullWidth\n                                onChange={props.onChange('age')}\n                                variant='outlined'\n                                value={props.values.age === undefined ? 18 : props.values.age}\n                                error={errors.errAge}\n                            >\n                                {ages && ages.map((index, value) => (\n                                    <MenuItem key={index + 1} value={value}>\n                                        {value + ' ans'}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n\n                            <br/> <br/>\n\n                            <TextField\n                                className='textField'\n                                id='gender'\n                                label='Sexe'\n                                select\n                                fullWidth\n                                value={props.values.gender === undefined ? 'M' : props.values.gender}\n                                onChange={props.onChange('gender')}\n                                variant='outlined'\n                                error={errors.errGender}\n                            >\n                                {sexes && sexes.map((value, id) => (\n                                    <MenuItem key={id} value={value.id}>\n                                        {value.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n\n                            <br/> <br/>\n\n                            <Grid container spacing={3}>\n                                <Grid item xs={6}>\n                                    <InputLabel className='inputLabel'>\n                                        Fumeur <SmokingRoomsIcon/>\n                                    </InputLabel>\n                                    <Switch\n                                        checked={props.values.isASmoker}\n                                        onChange={props.onChange('isASmoker')}\n                                        color='primary'\n                                        name='isASmoker'\n                                        inputProps={{'aria-label': 'primary checkbox'}}\n                                    /> </Grid>\n                                <Grid item xs={6}>\n                                    <InputLabel className='inputLabel'>\n                                        Alcool <LocalBarIcon/>\n                                    </InputLabel>\n                                    <Switch\n                                        checked={props.values.isDrinker}\n                                        onChange={props.onChange('isDrinker')}\n                                        color='primary'\n                                        name='isDrinker'\n                                        inputProps={{'aria-label': 'primary checkbox'}}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <div className={classes.paper}>\n\n                            <TextField\n                                aria-label='minimum height'\n                                placeholder='Antécédents médicaux'\n                                variant='outlined'\n                                margin='normal'\n                                label='Antécédents médicaux'\n                                multiline\n                                autoFocus\n                                required\n                                fullWidth\n                                name='old_injury'\n                                type='textarea'\n                                id='old_injury'\n                                value={props.values.old_injury}\n                                autoComplete='current-old_injury'\n                                onChange={props.onChange('problem_health')}\n                                error={errors.errProblem_health}\n                            />\n\n                            <TextField\n                                aria-label='minimum height'\n                                placeholder='Renseignez le(s) traitement(s)'\n                                variant='outlined'\n                                label='Sous traitement'\n                                multiline\n                                fullWidth\n                                margin='normal'\n                                required\n                                name='current_treatment'\n                                type='textarea'\n                                id='current_treatment'\n                                value={props.values.errCurrent_treatment}\n                                autoComplete='current-current_treatment'\n                                onChange={props.onChange('current_treatment')}\n                                error={errors.errCurrent_treatment}\n                            />\n                            <br/>\n\n                            <TextField\n                                aria-label='minimum height'\n                                placeholder='Allergie(s)'\n                                variant='outlined'\n                                label='Allergie(s)'\n                                multiline\n                                fullWidth\n                                margin='normal'\n                                name='allergies'\n                                type='textarea'\n                                id='current_allergies'\n                                value={props.values.allergies}\n                                autoComplete='current-allergies'\n                                onChange={props.onChange('allergies')}\n                                error={errors.errAllergies}\n                            />\n\n                            <br/> <br/>\n                        </div>\n                    </Grid>\n                </Grid>\n                <center>\n                    <Button disabled className={classes.button}>\n                        Précédent\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type='submit'\n                        onClick={catchSubmit}\n                    >\n                        Suivant\n                    </Button>\n                </center>\n                <br/><br/><br/><br/>\n            </form>\n        </>\n    )\n}\n\nexport default Patient\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport {TextField, Grid} from \"@material-ui/core\";\nimport {DropzoneArea} from 'material-ui-dropzone';\nimport {Fingerprint, Scanner, AddAPhoto, Panorama} from \"@material-ui/icons\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        alignItems: 'left',\n        width: '100%'\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.primary}`,\n    },\n}));\n\nconst ExamComplementaire = (props) => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                aria-label=\"Vertical tabs example\"\n                className={classes.tabs}\n            >\n                <Tab label=\"Scanner\" {...a11yProps(0)} />\n                <Tab label=\"Biopsy\" {...a11yProps(1)} />\n                <Tab label=\"Moulage en plâtre\" {...a11yProps(2)} />\n                <Tab label=\"Téléradiographie\" {...a11yProps(3)} />\n            </Tabs>\n            <TabPanel value={value} index={0}>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <DropzoneArea\n                            showPreviews={true}\n                            showPreviewsInDropzone={false}\n                            dropzoneText={'Déposez vos scanner'}\n                            useChipsForPreview\n                            previewGridProps={{container: {spacing: 1, direction: 'row'}}}\n                            previewText=\"Fichiers\"\n                            Icon={Scanner}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            placeholder='Description du Scanner'\n                            variant='outlined'\n                            label='Description du Scanner'\n                            rows={5}\n                            multiline\n                            fullWidth\n                            margin='dense'\n                            name='scanner_desc'\n                            type='textarea'\n                            id='scanner_desc'\n                            value={props.values.scanner_desc}\n                            autoComplete='current-scanner_desc'\n                            onChange={props.onChange('scanner_desc')}\n                        />\n                    </Grid>\n                </Grid>\n                </TabPanel>\n            <TabPanel value={value} index={1}>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                <DropzoneArea\n                    showPreviews={true}\n                    showPreviewsInDropzone={false}\n                    dropzoneText={'Déposez vos biopsy'}\n                    useChipsForPreview\n                    previewGridProps={{container: {spacing: 1, direction: 'row'}}}\n                    previewText=\"Fichiers\"\n                    Icon={Fingerprint}\n\n                />\n                    </Grid>\n                    <Grid item xs={6}>\n\n                    <TextField\n                    aria-label='minimum height'\n                    placeholder='Description de la Biopsy'\n                    variant='outlined'\n                    label='Description de la Biopsy'\n                    rows={5}\n                    multiline\n                    fullWidth\n                    margin='dense'\n                    name='biopsy_desc'\n                    type='textarea'\n                    id='biopsy_desc'\n                    value={props.values.biopsy_desc}\n                    autoComplete='current-biopsy_desc'\n                    onChange={props.onChange('biopsy_desc')}\n                />\n                    </Grid>\n                </Grid>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <DropzoneArea\n                            showPreviews={true}\n                            showPreviewsInDropzone={false}\n                            dropzoneText={'Déposez vos photos de moulages'}\n                            useChipsForPreview\n                            previewGridProps={{container: {spacing: 1, direction: 'row'}}}\n                            previewText=\"Fichiers\"\n                            Icon={AddAPhoto}\n\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n\n                        <TextField\n                            aria-label='minimum height'\n                            placeholder='Description du moulage'\n                            variant='outlined'\n                            label='Description du moulage'\n                            rows={5}\n                            multiline\n                            fullWidth\n                            margin='dense'\n                            name='biopsy_desc'\n                            type='textarea'\n                            id='biopsy_desc'\n                            value={props.values.moulage_desc}\n                            autoComplete='current-moulage_desc'\n                            onChange={props.onChange('moulage_desc')}\n                        />\n                    </Grid>\n                </Grid>\n            </TabPanel>\n            <TabPanel value={value} index={3}>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <DropzoneArea\n                            showPreviews={true}\n                            showPreviewsInDropzone={false}\n                            dropzoneText={'Déposez vos téléradiographie'}\n                            useChipsForPreview\n                            previewGridProps={{container: {spacing: 1, direction: 'row'}}}\n                            previewText=\"Fichiers\"\n                            Icon={Panorama}\n\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            aria-label='minimum height'\n                            placeholder='Description de la téléradiographie'\n                            variant='outlined'\n                            label='Description de la téléradiographie'\n                            rows={5}\n                            multiline\n                            fullWidth\n                            margin='dense'\n                            name='teleradio_desc'\n                            type='textarea'\n                            id='teleradio_desc'\n                            value={props.values.teleradio_desc}\n                            autoComplete='current-teleradio_desc'\n                            onChange={props.onChange('teleradio_desc')}\n                        />\n                    </Grid>\n                </Grid>\n            </TabPanel>\n        </div>\n    );\n}\n\nexport default ExamComplementaire\n\n\n","import './exam.scss'\nimport React, {useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {\n    Typography,\n    Button,\n    Grid\n} from '@material-ui/core/'\nimport {makeStyles} from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {DropzoneArea} from 'material-ui-dropzone';\nimport CreatableSelect from 'react-select/creatable';\nimport ExamComplementaire from \"./ExamComplementaire\";\nimport oStyle from '../../../../UI/ResponsiveDesign/AuthStyle'\nimport { UPDATE_LEVEL, UPDATE_STEPPER_POSTCASE } from '../../../../../store/actions'\n\n\nconst useStyles = makeStyles((theme) => (oStyle(theme)))\n\n\nconst Exam = (props) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const symptomes = useSelector((state) => state.home.symptomes)\n\n    const initVals = {\n        exam_pics: [],\n        extra_exam_desc: [],\n        errIntra_extra_oral_desc: false,\n        errExtra_exam_name: false,\n        errSymptomes: false\n    }\n    const [errors, setErrors] = useState(initVals)\n\n    const catchSubmit = async (event) => {\n        event.preventDefault()\n        let isValid = true\n        if (props.values.intra_extra_oral_desc === '') {\n            setErrors({...errors, errIntra_extra_oral_desc: true});\n            isValid = false\n        }\n        /*if (props.values.extra_exam_name < 1) {\n            setErrors({...errors, errExtra_exam_name: true});\n            isValid = false\n        }\n        if (props.values.extra_exam_desc < 1) {\n            setErrors({...errors, errExtra_exam_desc: true});\n            isValid = false\n        }*/\n        if (props.values.symptomes.length < 1) {\n            setErrors({...errors, errSymptomes: true});\n            isValid = false\n        }\n\n        if (isValid) {\n            dispatch({type: UPDATE_LEVEL, level: 'diagnostic'})\n            dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 2})\n        }\n\n    }\n    const catchOnmit = async (event) => {\n        event.preventDefault()\n        dispatch({type: UPDATE_LEVEL, level: ''})\n        dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 0})\n    }\n\n    let newSymptome1 = symptomes.map(({'@id': value, ...rest}) => ({value, ...rest}));\n    const newSymptome = newSymptome1.map(({'name': label, ...rest}) => ({label, ...rest}));\n\n    return (\n        <>\n            <form className={classes.form} noValidate>\n                <Typography component='h1' variant='h5'>\n                    <center>Examen Clinique</center>\n                </Typography>\n\n                <Grid container item spacing={3} component='main'>\n                    <Grid item xs={12} sm={6}>\n                        <div className={classes.paper}>\n                            <Button variant='contained' component='label'>\n                                <InputLabel className='inputLabel'>\n                                    Ajouter des Photos:\n                                </InputLabel>\n                                <input\n                                    type='file'\n                                    onChange={props.onChange('exam_pics')}\n                                    name='exam_pics'\n                                    id='exam_pics'\n                                    multiple\n                                />\n                            </Button>\n                            <br/>\n                            <DropzoneArea\n                                showPreviews={true}\n                                showPreviewsInDropzone={false}\n                                useChipsForPreview\n                                previewGridProps={{container: {spacing: 1, direction: 'row'}}}\n                                previewText=\"Selected files\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <div className={classes.paper}>\n                            <TextField\n                                aria-label='minimum height'\n                                // placeholder='Description intraorale et extraorale'\n                                variant='outlined'\n                                margin='dense'\n                                label='Description intraorale et extraorale'\n                                multiline\n                                autoFocus\n                                required\n                                fullWidth\n                                rows={4}\n                                name='intra_extra_oral_desc'\n                                type='textarea'\n                                id='intra_extra_oral_desc'\n                                value={props.values.intra_extra_oral_desc}\n                                autoComplete='current-intra_extra_oral_desc'\n                                onChange={props.onChange('intra_extra_oral_desc')}\n                                error={errors.errIntra_extra_oral_desc}\n                            />\n\n                            <br/> <br/>\n                            <div style={{width: '100%'}}>\n                                <CreatableSelect\n                                    placeholder={'Symptôme, pas encore fonctionnel'}\n                                    isMulti\n                                    //onChange={props.onChange('symptomes')}\n                                    options={newSymptome}\n                                />\n                            </div>\n                            <br/>\n                            <br/>\n\n                            <TextField\n                                className='textField'\n                                id='Symptomes'\n                                label='Symptomes'\n                                select\n                                onChange={props.onChange('symptomes')}\n                                variant='outlined'\n                                fullWidth\n                                SelectProps={{\n                                    multiple: true,\n                                    value: props.values.symptomes\n                                }}\n                                error={errors.errSymptomes}\n                            >\n                                {symptomes && symptomes.map((value) => (\n                                    <MenuItem key={value['@id']} value={value['@id']}>\n                                        {value.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n\n                        </div>\n                    </Grid>\n                  <Grid item xs={12} sm={12}>\n\n                  <div className={classes.paper}>\n                  <Typography component='h1' variant='h5'>\n                    Examen Complementaire\n                  </Typography>\n\n                 {/* <TextField\n                      aria-label='minimum height'\n                      placeholder=\"Renseignez le nom l'examen\"\n                      variant='outlined'\n                      margin='dense'\n                      label=\"Nom de l'examen\"\n                      multiline\n                      name='extra_exam_name'\n                      type='textarea'\n                      id='extra_exam_name'\n                      value={props.values.extra_exam_name}\n                      autoComplete='current-extra_exam_name'\n                      onChange={props.onChange('extra_exam_name')}\n                      error={errors.errExtra_exam_name}\n                  />*/}\n\n                  <ExamComplementaire onChange={props.onChange} values={props.values}/>\n                  </div>\n                  </Grid>\n                </Grid>\n                <center>\n                    <Button type='submit'\n                            onClick={catchOnmit}\n                            className={classes.button}>\n                        Précédent\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type='submit'\n                        onClick={catchSubmit}\n                    >\n                        Suivant\n                    </Button>\n                </center>\n                <br/><br/><br/><br/>\n            </form>\n        </>\n    )\n}\n\nexport default Exam\n","import './diagnostic.scss'\n\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  Typography,\n  Button\n} from '@material-ui/core/'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport CreatableSelect from \"react-select/creatable/dist/react-select.esm\";\nimport oStyle from '../../../../UI/ResponsiveDesign/AuthStyle'\nimport { UPDATE_LEVEL, UPDATE_STEPPER_POSTCASE } from '../../../../../store/actions'\n\n\nconst useStyles = makeStyles((theme) => (oStyle(theme)))\n\nconst Diagnostic = (props) => {\n  const classes = useStyles()\n  const pathologies = useSelector((state) => state.home.pathologies)\n\n  const dispatch = useDispatch()\n  const initVals = {\n    errPathologies: false,\n    errDiagnostic: false,\n    errMedication_administered: false,\n    errGlobal_desc: false\n  }\n  const [errors, setErrors] = useState(initVals)\n\n  const catchSubmit = async (event) => {\n    event.preventDefault()\n    let isValid = true\n    if (props.values.diagnostic === '') { setErrors({ ...errors, errDiagnostic: true }); isValid = false }\n    if (props.values.pathologies.length < 1) { setErrors({ ...errors, errPathologies: true }); isValid = false }\n    if (props.values.medication_administered === '') { setErrors({ ...errors, errMedication_administered: true }); isValid = false }\n    if (props.values.global_desc === '') { setErrors({ ...errors, errGlobal_desc: true }); isValid = false }\n\n    if (isValid) {\n      dispatch({ type: UPDATE_LEVEL, level: 'treatplan' })\n      dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 3})\n    }\n  }\n\n  const catchOnmit = async (event) => {\n    event.preventDefault()\n    dispatch({ type: UPDATE_LEVEL, level: 'exam' })\n    dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 1})\n\n  }\n\n  let newPath1 = pathologies.map(({'@id': value, ...rest}) => ({value, ...rest}));\n  const newPathologie = newPath1.map(({'name': label, ...rest}) => ({label, ...rest}));\n\n  return (\n    <>\n    <form className={classes.form} noValidate>\n      <Typography component='h1' variant='h5'>\n        <center>Diagnostic</center>\n      </Typography>\n\n      <Grid container item spacing={2} component='main'>\n        <Grid item xs={12}>\n          <div className={classes.paper}>\n            <TextField\n                aria-label='minimum height'\n                placeholder='diagnostic'\n                variant='outlined'\n                label='Diagnostic'\n                multiline\n                rows={4}\n                autoFocus\n                fullWidth\n                margin='dense'\n                required\n                name='diagnostic'\n                type='textarea'\n                id='diagnostic'\n                value={props.values.diagnostic}\n                autoComplete='current-diagnostic'\n                onChange={props.onChange('diagnostic')}\n                error={errors.errDiagnostic}\n            />\n          </div>\n        </Grid>\n          <Grid item xs={12} sm={6}>\n          <div className={classes.paper}>\n            <div style={{width: '100%'}}>\n              <CreatableSelect\n                  //POSSIBILITE de trier par catégorie check doc react-select.com\n                  placeholder={'Pathologie, pas encore fonctionnel'}\n                  isMulti\n                  //onChange={props.onChange('symptomes')}\n                  options={newPathologie}\n              />\n            </div>\n            <br/>\n              <TextField\n                className='textField'\n                id='pathologies'\n                select\n                label='Pathologies'\n                onChange={props.onChange('pathologies')}\n                variant='outlined'\n                fullWidth\n                SelectProps={{\n                  multiple: true,\n                  value: props.values.pathologies\n                }}\n                error={errors.errPathologies}\n              >\n                {pathologies && pathologies.map((value) => (\n                  <MenuItem key={value['@id']} value={value['@id']}>\n                    {value.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n          </div>\n        </Grid>\n            <Grid item xs={12} sm={6}>\n              <div className={classes.paper}>\n            <TextField\n                variant='outlined'\n                margin='normal'\n                required\n                name='medication_administered'\n                label='Médicaments administrés, utile ?'\n                multiline\n                fullWidth\n                type='text'\n                id='medication_administered'\n                value={props.values.medication_administered}\n                autoComplete='current-medication_administered'\n                onChange={props.onChange('medication_administered')}\n                error={errors.errMedication_administered}\n              />\n\n              <br /> <br />\n          </div>\n        </Grid>\n        </Grid>\n      <center>\n        <Button type='submit'\n                onClick={catchOnmit}\n                className={classes.button}>\n          Précédent\n        </Button>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type='submit'\n            onClick={catchSubmit}\n        >\n          Suivant\n        </Button>\n      </center>\n      <br/><br/><br/><br/>\n    </form>\n    </>\n  )\n}\n\nexport default Diagnostic\n","import './evolution.scss'\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport {\n  Typography,\n  TextField,\n  Button\n} from '@material-ui/core/'\nimport Grid from '@material-ui/core/Grid'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { makeStyles } from '@material-ui/core/styles'\nimport oStyle from '../../../../UI/ResponsiveDesign/AuthStyle'\nimport {UPDATE_LEVEL, UPDATE_STEPPER_POSTCASE} from '../../../../../store/actions'\nimport AddAPhotoIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport {DropzoneArea} from \"material-ui-dropzone\";\n\nconst useStyles = makeStyles((theme) => (oStyle(theme)))\n\nconst Evolution = (props) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const initVals = {\n    errEvolution: false\n  }\n  const [errors/*, setErrors*/] = useState(initVals)\n\n  const catchSubmit = async (event) => {\n    event.preventDefault()\n    let isValid = true\n    /*if (props.values.evolution === '') { setErrors({ ...errors, errEvolution: true }); isValid = false }*/\n    if (isValid) { dispatch({ type: UPDATE_LEVEL, level: 'cliniccase' })\n      dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 5})\n\n    }\n  }\n\n  const catchOnmit = async (event) => {\n    event.preventDefault()\n    dispatch({ type: UPDATE_LEVEL, level: 'treatplan' })\n    dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 3})\n  }\n\n  return (\n    <>\n    <Typography component='h1' variant='h5'>\n      <center>Evolution</center>\n    </Typography>\n    <form className={classes.form} noValidate>\n      <Grid container component='main'>\n        <Grid item xs={12} >\n          <div className={classes.paper}>\n              <TextField\n                aria-label='minimum height'\n                rows={4}\n                placeholder='Description des évolutions'\n                variant='outlined'\n                margin='normal'\n                required\n                fullWidth\n                name='evolution'\n                label='Evolution'\n                multiline\n                autoFocus\n                type='textarea'\n                id='evolution'\n                value={props.values.evolution}\n                autoComplete='current-evolution'\n                onChange={props.onChange('evolution')}\n                error={errors.errEvolution}\n              />\n\n              <br />  <br />\n\n              <Button variant='contained' component='label'>\n                <InputLabel className='inputLabel'>\n                  Ajouter des Photos:\n                </InputLabel>\n                <input\n                  type='file'\n                  onChange={props.onChange('evolution_pics')}\n                  name='evolution_pics'\n                  id='evolution_pics'\n                  values={props.values.evolution_pics}\n                  multiple\n                />\n              </Button>\n\n              <br />  <br />\n            <DropzoneArea\n                showPreviewsInDropzone\n                useChipsForPreview\n                dropzoneText={'Déposez les photos d\\'évolutions'}\n                previewGridProps={{container: {spacing: 1, direction: 'row'}}}\n                previewText=\"Selected files\"\n                Icon={AddAPhotoIcon}\n            />\n            <br/><br/>\n            <TextField\n                aria-label='minimum height'\n                rows={4}\n                placeholder='Conclusion'\n                variant='outlined'\n                margin='normal'\n                required\n                autoFocus\n                fullWidth\n                name='conclusion'\n                type='textarea'\n                id='conclusion'\n                label='Conclusion'\n                multiline\n                value={props.values.conclusion}\n                autoComplete='current-conclusion'\n                onChange={props.onChange('conclusion')}\n                error={errors.errConclusion}\n            />\n          </div>\n        </Grid>\n      </Grid>\n      <br/>\n      <center>\n        <Button className={classes.button}\n                onClick={catchOnmit}\n        >\n          Précédent\n        </Button>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type='submit'\n            onClick={catchSubmit}\n        >\n          Suivant\n        </Button>\n      </center>\n      <br/><br/><br/><br/>\n    </form>\n    </>\n  )\n}\n\nexport default Evolution\n","import axios from 'axios'\n\nconst PATIENTS =\n  process.env.REACT_APP_BACK_API_URL + process.env.REACT_APP_PATIENTS\n\nexport const postPatient = (values) => {\n  const item = {\n    age: values.age,\n    gender: values.gender,\n    isASmoker: values.isASmoker,\n    isMedicalBackground: values.is_medical_background,\n    problemHealth: values.problem_health,\n    inTreatment: values.in_treatment\n  }\n\n  const reponses = axios\n    .post(PATIENTS, item)\n    .then((res) => ({\n      message: 'OK',\n      datas: res.data\n    }))\n    .catch((e) => JSON.stringify(e))\n\n  return reponses\n}\n","import './clinicCase.scss'\nimport React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\nimport {useToasts} from 'react-toast-notifications'\nimport {\n    Typography,\n    Button\n} from '@material-ui/core/'\nimport SaveIcon from '@material-ui/icons/Save'\nimport Grid from '@material-ui/core/Grid'\nimport {makeStyles} from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport oStyle from '../../../../UI/ResponsiveDesign/AuthStyle'\nimport {UPDATE_LEVEL, START_LOADER, STOP_LOADER, UPDATE_STEPPER_POSTCASE} from '../../../../../store/actions'\nimport config from '../../../../../config'\nimport {postCase} from '../../../../../services/Cases'\nimport {postPatient} from '../../../../../services/Patient'\nimport {errorApi} from '../../../../../utils'\nimport Spinner from '../../../../UI/Dawers/Spinner'\n\nconst useStyles = makeStyles((theme) => (oStyle(theme)))\n\nconst ClinicCase = (props) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const {addToast} = useToasts()\n    const history = useHistory()\n    const messages = config.messages.cases\n\n    const keywords = useSelector((state) => state.home.keywords)\n    const specialities = useSelector((state) => state.home.specialities)\n    const loader = useSelector((state) => state.home.loader)\n\n    const initVals = {\n        errTitle: false,\n        errSummary: false,\n        errKeywords: false,\n        errSpecialities: false\n    }\n\n    const [errors, setErrors] = useState(initVals)\n\n    const catchSubmit = async (event) => {\n        event.preventDefault()\n        let isValid = true\n        if (props.values.title === '') {\n            setErrors({...errors, errTitle: true});\n            isValid = false\n        }\n        if (props.values.summary === '') {\n            setErrors({...errors, errSummary: true});\n            isValid = false\n        }\n        if (props.values.keywords.length < 1) {\n            setErrors({...errors, errKeywords: true});\n            isValid = false\n        }\n        if (props.values.specialities.length < 1) {\n            setErrors({...errors, errSpecialities: true});\n            isValid = false\n        }\n\n        if (isValid) {\n            dispatch({type: START_LOADER})\n\n            const patient = await postPatient(props.values)\n\n            if (!errorApi().test(patient)) {\n                const datas = await postCase(props.values, patient.datas['@id'])\n\n                if (errorApi().test(datas)) {\n                    addToast(messages.error, {appearance: 'error'})\n                } else {\n                    addToast(messages.success, {appearance: 'success'})\n                    history.push('/')\n                }\n            } else {\n                addToast(messages.patientError, {appearance: 'error'})\n            }\n            dispatch({type: STOP_LOADER})\n            dispatch({type: UPDATE_LEVEL, level: ''})\n            dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 0})\n        }\n    }\n\n    const catchOnmit = async (event) => {\n        event.preventDefault()\n        dispatch({type: UPDATE_LEVEL, level: 'evolution'})\n        dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 4})\n    }\n\n    if (loader === true) {\n        return (<Spinner/>)\n    } else {\n        return (\n            <>\n                <Typography component='h1' variant='h5'>\n                    <center>Ajouter votre cas clinique</center>\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <Grid container component='main'>\n                        <Grid item xs={12}>\n                            <div className={classes.paper}>\n                                <Typography component='h1' variant='h5'>\n                                    Titre du cas\n                                </Typography>\n                                <TextField\n                                    variant='outlined'\n                                    margin='normal'\n                                    required\n                                    fullWidth\n                                    autoFocus\n                                    name='title'\n                                    label='Titre du cas'\n                                    type='text'\n                                    id='title'\n                                    autoComplete='current-title'\n                                    onChange={props.onChange('title')}\n                                    error={errors.errTitle}\n                                />\n                                <Typography component='h1' variant='h5'>\n                                    Inscription\n                                </Typography>\n                                <TextField\n                                    variant='outlined'\n                                    margin='normal'\n                                    required\n                                    autoFocus\n                                    fullWidth\n                                    name='summary'\n                                    label='Résumé'\n                                    type='text'\n                                    id='summary'\n                                    autoComplete='current-summary'\n                                    onChange={props.onChange('summary')}\n                                    error={errors.errSummary}\n                                />\n\n                                <Typography component='h1' variant='h5'>\n                                    Mot clés\n                                </Typography>\n                                <TextField\n                                    className='textField'\n                                    id='keywords'\n                                    select\n                                    onChange={props.onChange('keywords')}\n                                    variant='outlined'\n                                    fullWidth\n                                    SelectProps={{\n                                        multiple: true,\n                                        value: props.values.keywords\n                                    }}\n                                    error={errors.errKeywords}\n                                >\n                                    {keywords && keywords.map((value) => (\n                                        <MenuItem key={value['@id']} value={value['@id']}>\n                                            {value.name}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n\n                                <Typography component='h1' variant='h5'>\n                                    Spécialités\n                                </Typography>\n                                <TextField\n                                    className='textField'\n                                    id='specialities'\n                                    select\n                                    onChange={props.onChange('specialities')}\n                                    variant='outlined'\n                                    fullWidth\n                                    SelectProps={{\n                                        multiple: true,\n                                        value: props.values.specialities\n                                    }}\n                                    error={errors.errSpecialities}\n                                >\n                                    {specialities && specialities.map((value) => (\n                                        <MenuItem key={value['@id']} value={value['@id']}>\n                                            {value.name}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n\n                                <br/> <br/>\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <center>\n                        <Grid item xs={12}>\n                            <Button className={classes.button}\n                                    onClick={catchOnmit}\n                            >\n                                Précédent\n                            </Button>\n\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                type='submit'\n                                onClick={catchSubmit}\n                            >\n                                <SaveIcon/>\n                            </Button>\n                        </Grid>\n                    </center>\n                    <br/><br/><br/><br/>\n                </form>\n            </>\n        )\n    }\n}\n\nexport default ClinicCase\n","import './treatPlan.scss'\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core/styles\";\nimport React, {useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport {\n    Typography,\n    Button\n} from '@material-ui/core/'\nimport Grid from '@material-ui/core/Grid'\nimport {makeStyles} from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport oStyle from '../../../../UI/ResponsiveDesign/AuthStyle'\nimport {UPDATE_LEVEL, UPDATE_STEPPER_POSTCASE} from '../../../../../store/actions'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport {DropzoneArea} from \"material-ui-dropzone\";\nimport CreatableSelect from \"react-select/creatable/dist/react-select.esm\";\n\nconst useStyles = makeStyles((theme) => (oStyle(theme)))\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiDropzoneArea: {\n            root: {\n                minHeight: '100px',\n                marginTop: '15px'\n            },\n        }\n    }\n});\n\nconst TreatPlan = (props) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const treatments = useSelector((state) => state.home.treatments)\n\n    const initVals = {\n        errStep: false,\n        errTreatment: false\n    }\n    const [errors, setErrors] = useState(initVals)\n\n    const catchSubmit = async (event) => {\n        event.preventDefault()\n        let isValid = true\n        if (props.values.step1.length < 1) {\n            setErrors({...errors, errStep: true});\n            isValid = false\n        }\n        if (props.values.treatment.length < 1) {\n            setErrors({...errors, errTreatment: true});\n            isValid = false\n        }\n\n        if (isValid) {\n            dispatch({type: UPDATE_LEVEL, level: 'evolution'})\n            dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 4})\n        }\n    }\n\n    const catchOnmit = async (event) => {\n        event.preventDefault()\n        dispatch({type: UPDATE_LEVEL, level: 'diagnostic'})\n        dispatch({type: UPDATE_STEPPER_POSTCASE, levelStepperPostCase: 2})\n    }\n\n    const step = [1, 2, 3]\n    let newTreatments1 = treatments.map(({'@id': value, ...rest}) => ({value, ...rest}));\n    const newTreatments = newTreatments1.map(({'name': label, ...rest}) => ({label, ...rest}));\n\n    return (\n        <>\n            <Typography component='h1' variant='h5'>\n                <center>Plan de traitement</center>\n            </Typography>\n            <form className={classes.form} noValidate>\n                <Grid container component='main'>\n                    <Grid item xs={12} sm={12}>\n                        {step.map((step) => (\n                            <div key={step} className={classes.paper}>\n                                <InputLabel className='inputLabel'>\n                                    Etape {step}\n                                </InputLabel>\n                                <Grid container component='main'>\n                                    <Grid item xs={12} sm={6}>\n                                        <div className={classes.paper}>\n                                            <TextField\n                                                placeholder='Description'\n                                                variant='outlined'\n                                                margin='normal'\n                                                required\n                                                autoFocus\n                                                rows={7}\n                                                fullWidth\n                                                label={'Etape ' + step}\n                                                multiline\n                                                name={'step' + step}\n                                                type='textarea'\n                                                id={'step' + step}\n                                                value={props.values['step' + step]}\n                                                autoComplete={'current-step' + step}\n                                                onChange={props.onChange('step' + step)}\n                                                error={step === 1 ? errors.errStep : false}\n                                            />\n                                        </div>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <div className={classes.paper}>\n                                            <MuiThemeProvider theme={theme}>\n                                                <DropzoneArea\n                                                    showPreviews={true}\n                                                    dropzoneText={'Déposez vos photos'}\n                                                    showPreviewsInDropzone={false}\n                                                    useChipsForPreview\n                                                    previewGridProps={{container: {spacing: 1, direction: 'row'}}}\n                                                    previewText=\"Selected files\"\n                                                    Icon={AddAPhotoIcon}\n                                                />\n                                            </MuiThemeProvider>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        ))}\n                        <Grid item xs={12}>\n                            <div className={classes.paper}>\n                                <div style={{width: '100%'}}>\n                                    <CreatableSelect\n                                        placeholder={'Traitement, pas encore fonctionnel'}\n                                        isMulti\n                                        //onChange={props.onChange('treatment')}\n                                        options={newTreatments}\n                                    />\n                                </div>\n                                <TextField\n                                    className='textField'\n                                    id='treatment'\n                                    select\n                                    onChange={props.onChange('treatment')}\n                                    variant='outlined'\n                                    fullWidth\n                                    SelectProps={{\n                                        multiple: true,\n                                        value: props.values.treatment\n                                    }}\n                                    error={errors.errTreatment}\n                                >\n                                    {treatments && treatments.map((value) => (\n                                        <MenuItem key={value['@id']} value={value['@id']}>\n                                            {value.name}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <br/>\n                <center>\n                    <Button className={classes.button}\n                            onClick={catchOnmit}\n                    >\n                        Précédent\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        type='submit'\n                        onClick={catchSubmit}\n                    >\n                        Suivant\n                    </Button>\n                </center>\n                <br/><br/><br/><br/>\n            </form>\n        </>\n    )\n}\n\nexport default TreatPlan\n","import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport {useSelector} from \"react-redux\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nfunction getSteps() {\n    return ['Information patient', 'Examens', 'Diagnostic', 'Plan de traitement', 'Evolution', 'Finalisation'];\n}\n\nexport default function PostCaseStepper() {\n    const home = useSelector((state) => state.home)\n    const level = home.levelStepperPostCase\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(level);\n    const steps = getSteps();\n\n    useEffect(() => {\n        setActiveStep(level)\n    }, [level]);\n\n    return (\n        <div className={classes.root}>\n            <Stepper alternativeLabel activeStep={activeStep}>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport ModalGuidelinesPostCase from '../../components/Helper/Modal/ModalGuidelines-PostCase/ModalGuidelinesPostCase'\nimport Patient from '../../components/App/Cases/PostCase/Patient/Patient'\nimport Exam from '../../components/App/Cases/PostCase/Exam/Exam'\nimport Diagnostic from '../../components/App/Cases/PostCase/Diagnostic/Diagnostic'\nimport Evolution from '../../components/App/Cases/PostCase/Evolution/Evolution'\nimport ClinicCase from '../../components/App/Cases/PostCase/ClinicCase/ClinicCase'\nimport TreatPlan from '../../components/App/Cases/PostCase/TreatPlan/TreatPlan'\nimport TextField from '@material-ui/core/TextField'\nimport { setup } from '../../services/Auth'\n\nimport { fetchSpecialities, fetchPathologies, fetchKeywords, fetchTreatments, fetchSymptomes } from '../../services/Home'\nimport { SPECS_LIST, KEYWORDS_LIST, PATHO_LIST, TREATMENTS_LIST, SYMPTOMES_LIST } from '../../store/actions'\nimport PostCaseStepper from \"../../components/UI/Steppers/PostCaseStepper\";\nimport Header from \"../../components/App/Header/Header\";\n\nconst CasePost = () => {\n  const home = useSelector((state) => state.home)\n  const level = home.level\n  const specialities = home.specialities\n  const keywords = home.keywords\n  const pathologies = home.pathologies\n  const treatments = home.treatments\n  const symptomes = home.symptomes\n\n  const dispatch = useDispatch()\n\n  const getSpecialities = async () => {\n    const specialitiesLoaded = await fetchSpecialities()\n    dispatch({ type: SPECS_LIST, data: specialitiesLoaded.datas })\n  }\n\n  const getKeywords = async () => {\n    const keywordsLoaded = await fetchKeywords()\n    dispatch({ type: KEYWORDS_LIST, keywords: keywordsLoaded.datas })\n  }\n\n  const getPathologies = async () => {\n    const pathologiesLoaded = await fetchPathologies()\n    dispatch({ type: PATHO_LIST, data: pathologiesLoaded.datas })\n  }\n\n  const getTreatments = async () => {\n    const treatmentsLoaded = await fetchTreatments()\n    dispatch({ type: TREATMENTS_LIST, data: treatmentsLoaded.datas })\n  }\n\n  const getSymptomes = async () => {\n    const symptomesLoaded = await fetchSymptomes()\n    dispatch({ type: SYMPTOMES_LIST, data: symptomesLoaded.datas })\n  }\n\n  useEffect(() => {\n    if (specialities && specialities.length < 1) { getSpecialities() }\n    if (keywords && keywords.length < 1) { getKeywords() }\n    if (pathologies && pathologies.length < 1) { getPathologies() }\n    if (treatments && treatments.length < 1) { getTreatments() }\n    if (symptomes && symptomes.length < 1) { getSymptomes() }\n  })\n\n  const initValues = {\n    // Require for create patient but non in figma maquette\n    is_medical_background: true,\n    problemHealth: true,\n    in_treatment: 'true',\n\n    // Information du patient\n    age: '',\n    gender: '',\n    isASmoker: false,\n    isDrinker: false,\n    medical_background: [],\n    current_treatments: [],\n    allergies: '',\n    reason_consultation: '',\n\n    // Examen clinique\n    exam_pics: [],\n    pictures_clinic_exam: [],\n    intra_extra_oral_desc: '',\n    symptomes: [],\n\n    // Examen complementaire\n    extra_exam_name: '',\n    extra_exam_pictures: '',\n    extra_exam_desc: '',\n    scanner_desc: '',\n    scanner_pics: [],\n    biopsy_desc: '',\n    biopsy_pics: [],\n    moulage_desc: '',\n    moulage_pics: [],\n    teleradio_desc: '',\n    teleradio_pics: [],\n\n\n    // Dagnostic\n    diagnostic: '',\n    pathologies: [],\n    medication_administered: [],\n\n    // Plan de traitement\n    step1: \"\",\n    step1Pics: [],\n    step2: \"\",\n    step2Pics: [],\n    step3: \"\",\n    step3Pics: [],\n\n    // Evolution\n    evolution_pics: [],\n    evolution: '',\n\n    // Conclusion\n    conclusion: '',\n\n    // Add clinical case\n    title: '',\n    summary: '',\n    keywords: [],\n    specialities: [],\n\n    treatment: []\n  }\n\n  const [values, setValues] = useState(initValues)\n  const [inCrement, setInCrement] = useState(1)\n\n  const handleChange = prop => event => {\n    if (prop === 'isASmoker' || prop === 'isDrinker') { setValues({ ...values, [prop]: event.target.checked }) } else if (prop === 'old_injury') {\n      function addFields () {\n        var container = document.getElementById('fieldset_old_injury')\n        // Clear previous contents of the container\n        /* while (container.hasChildNodes()) {\n                container.removeChild(container.lastChild);\n            } */\n\n        // Append a node with a random text\n        var newDiv = document.createElement('div')\n        newDiv.setAttribute('id', 'node_old_injury' + inCrement)\n\n        //   texField.setAttribute(\"label\",\"minimum height\")\n        //   texField.setAttribute(\"placeholder\",\"Antecedent medicaux\")\n        //   texField.setAttribute(\"variant\",\"outlined\")\n        //   texField.setAttribute(\"label\",\"Antecedent medicaux\")\n        //   texField.setAttribute(\"multilined\",true)\n        //   texField.setAttribute(\"fullWidth\",true)\n        newDiv.append(React.createFactory('TexField', <TextField label='Combo box' variant='outlined'>jj</TextField>))\n\n        container.appendChild(newDiv)\n        // Create an <input> element, set its type and name attributes\n        /*\n\n            var input = document.createElement(\"input\");\n            input.type = \"text\";\n            input.name = \"member\" + i;\n            container.appendChild(input);\n\n            */\n        // Append a line break\n        container.appendChild(document.createElement('br'))\n        setInCrement(inCrement + 1)\n      }\n      addFields()\n      setValues({ ...values, [prop]: event.target.value })\n    } else { setValues({ ...values, [prop]: event.target.value }) }\n  }\n\n  let form\n\n  switch (level) {\n    case 'exam':\n      form = <Exam onChange={handleChange} values={values} />\n      break\n    case 'diagnostic':\n      form = <Diagnostic onChange={handleChange} values={values} />\n      break\n    case 'treatplan':\n      form = <TreatPlan onChange={handleChange} values={values} />\n      break\n    case 'evolution':\n      form = <Evolution onChange={handleChange} values={values} />\n      break\n    case 'cliniccase':\n      form = <ClinicCase onChange={handleChange} values={values} />\n      break\n    default:\n      form = <Patient onChange={handleChange} values={values} />\n  }\n\n  if (setup()) {\n    return (\n      <>\n        <Header/>\n        <ModalGuidelinesPostCase />\n        <PostCaseStepper/>\n        {form}\n      </>\n    )\n  } else {\n    return (<Redirect to='/' />)\n  }\n}\n\nexport default CasePost\n","import React from 'react'\nimport Header from '../../components/App/Header/Header'\n\nconst QuestionPost = () => {\n  return (\n    <>\n      <Header />\n    </>\n  )\n}\n\nexport default QuestionPost\n","export const Mouth = [\n  'Smile',\n  'Tongue',\n  'Twinkle',\n  'Concerned',\n  'Default',\n  'Disbelief',\n  'Eating',\n  'Grimace',\n  'Sad',\n  'ScreamOpen',\n  'Serious'\n]\n\nexport const Eye = [\n  'Close',\n  'Cry',\n  'Default',\n  'Dizzy',\n  'EyeRoll',\n  'Happy',\n  'Hearts',\n  'Side',\n  'Squint',\n  'Surprised',\n  'Wink',\n  'WinkWacky'\n]\n\nexport const Eyebrows = [\n  'Angry',\n  'Default',\n  'AngryNatural',\n  'DefaultNatural',\n  'FlatNatural',\n  'RaisedExcited',\n  'RaisedExcitedNatural',\n  'SadConcerned',\n  'SadConcernedNatural',\n  'UnibrowNatural',\n  'UpDown',\n  'UpDownNatural'\n]\n\nexport const Hair = [\n  'NoHair',\n  'Eyepatch',\n  'Hat',\n  'LongHairBigHair',\n  'LongHairBob',\n  'LongHairBun',\n  'LongHairCurly',\n  'LongHairCurvy',\n  'LongHairFrida',\n  'LongHairFro',\n  'LongHairFroBand',\n  'LongHairNotTooLong',\n  'LongHairShavedSides',\n  'LongHairMiaWallace',\n  'LongHairStraight',\n  'LongHairStraight2',\n  'LongHairStraightStrand',\n  'ShortHairFrizzle',\n  'ShortHairShaggyMullet',\n  'ShortHairShortCurly',\n  'ShortHairShortFlat',\n  'ShortHairShortRound',\n  'ShortHairShortWaved',\n  'ShortHairSides',\n  'ShortHairTheCaesar',\n  'ShortHairTheCaesarSidePart'\n]\n\nexport const HairColor = [\n  'Auburn',\n  'Black',\n  'Blonde',\n  'BlondeGolden',\n  'Brown',\n  'BrownDark',\n  'Platinum',\n  'Red',\n  'SilverGrey'\n]\n\nexport const SkinColor = [\n  'Tanned',\n  'Yellow',\n  'Pale',\n  'Light',\n  'Brown',\n  'BrownDark',\n  'Black'\n]\n\nexport const Accessories = [\n  'Blank',\n  'Kurt',\n  'Prescription01',\n  'Prescription02',\n  'Round',\n  'Sunglasses',\n  'Wayfarers'\n]\n\nexport const Clothes = [\n  'BlazerShirt',\n  'BlazerSweater',\n  'CollarSweater',\n  'GraphicShirt',\n  'Hoodie',\n  'Overall',\n  'ShirtCrewNeck',\n  'ShirtScoopNeck',\n  'ShirtVNeck'\n]\n\nexport const ClothesColor = [\n  'Pink',\n  'Red',\n  'White',\n  'Blue01',\n  'Blue02',\n  'Blue03',\n  'Gray01',\n  'Gray02',\n  'Heather',\n  'PastelBlue',\n  'PastelGreen',\n  'PastelOrange',\n  'PastelRed',\n  'PastelYellow'\n]\n\nexport const Beard = [\n  'Blank',\n  'BeardMedium',\n  'BeardLight',\n  'BeardMajestic',\n  'MoustacheFancy',\n  'MoustacheMagnum'\n]\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { useHistory } from 'react-router-dom'\nimport SaveIcon from '@material-ui/icons/Save';\nimport {\n    Mouth,\n    Eyebrows,\n    Eye,\n    Hair,\n    HairColor,\n    SkinColor,\n    Accessories,\n    Clothes,\n    ClothesColor, Beard\n} from \"../../components/UI/Avatars/Library\";\nimport Avatar, {Piece} from \"avataaars\";\nimport Button from \"@material-ui/core/Button\";\nimport {getUserById, getUserId, saveAvatar} from \"../../services/Users\";\nimport {SET_USER, UPDATE_AVATAR} from \"../../store/actions\";\nimport {useToasts} from \"react-toast-notifications\";\nimport config from \"../../config\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport IconButton from \"@material-ui/core/IconButton\";\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-force-tabpanel-${index}`}\n            aria-labelledby={`scrollable-force-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-force-tab-${index}`,\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        textAlign: \"center\",\n    },\n    btn: {\n        margin: 5\n    },\n    arrowBack: {\n        marginTop: '70px',\n        [theme.breakpoints.up('sm')]: {\n            marginTop: '0px'\n        }\n    }\n}));\n\nexport default function TabAvatar() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const {addToast} = useToasts()\n    const messages = config.messages.editUser\n    const currents_user = useSelector((state) => (state.user.current_user))\n\n\n\n    const [mouth, setMouth] = React.useState(currents_user.avatar && currents_user.avatar.mouthType);\n    const [eye, setEye] = React.useState(currents_user.avatar && currents_user.avatar.eyeType);\n    const [eyebrow, setEyebrow] = React.useState(currents_user.avatar && currents_user.avatar.eyebrowType);\n    const [hair, setHair] = React.useState(currents_user.avatar && currents_user.avatar.topType);\n    const [hairColor, setHaircolor] = React.useState(currents_user.avatar && currents_user.avatar.hairColor);\n    const [skinColor, setSkinColor] = React.useState(currents_user.avatar && currents_user.avatar.skinColor);\n    const [accessories, setAccessories] = React.useState(currents_user.avatar && currents_user.avatar.accessoriesType);\n    const [clothe, setClothe] = React.useState(currents_user.avatar && currents_user.avatar.clotheType);\n    const [clotheColor, setClotheColor] = React.useState(currents_user.avatar && currents_user.avatar.clotheColor);\n    const [beard, setBeard] = React.useState(currents_user.avatar && currents_user.avatar.facialHairType);\n    const [beardColor, setBeardColor] = React.useState(currents_user.avatar && currents_user.avatar.facialHairColor);\n    const [i, setI] = React.useState(true);\n\n    useEffect(() => {\n        /* eslint-disable */\n        if (currents_user.avatar && i === true) { // eslint-disable-line\n            setI(false)\n            setBeardColor(currents_user.avatar.facialHairColor)\n            setMouth(currents_user.avatar.mouthType)\n            setEye(currents_user.avatar.eyeType)\n            setEyebrow(currents_user.avatar.eyebrowType)\n            setHair(currents_user.avatar.topType)\n            setHaircolor(currents_user.avatar.hairColor)\n            setSkinColor(currents_user.avatar.skinColor)\n            setAccessories(currents_user.avatar.accessoriesType)\n            setClothe(currents_user.avatar.clotheType)\n            setClotheColor(currents_user.avatar.clotheColor)\n            setBeard(currents_user.avatar.facialHairType)\n        }\n    }, [])\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const ResponseUser = async () => {\n        const response = await getUserById(getUserId())\n\n        if (Object.entries(response).length !== 0) {\n            dispatch({ type: SET_USER, datas: response.datas })\n        }\n    }\n\n    const catchSubmit = async (e) => {\n        e.preventDefault()\n\n        const response = await saveAvatar({\n            topType: hair,\n            accessoriesType: accessories,\n            hairColor: hairColor,\n            facialHairType: hair,\n            facialHairColor: beardColor,\n            clotheType: clothe,\n            clotheColor: clotheColor,\n            eyebrowType: eyebrow,\n            mouthType: mouth,\n            skinColor: skinColor,\n            eyeType: eye,\n            avatarId: currents_user.avatar.id\n        })\n\n        if (response === 'OK') {\n            addToast(messages.success, {appearance: 'success'})\n        } else {\n            addToast(messages.error, {appearance: 'error'})\n        }\n        dispatch({type: UPDATE_AVATAR})\n        await ResponseUser()\n        history.push(\"/profile\")\n    }\n    return (\n        <>\n            <IconButton className={classes.arrowBack}  href={\"#\"} onClick={() => history.goBack()}>\n                <ArrowBackIcon color='primary'/>\n            </IconButton>\n            <div className={classes.root}>\n                <Avatar\n                    style={{width: '200px', height: '200px'}}\n                    avatarStyle='Circle'\n                    topType={hair && hair}\n                    accessoriesType={accessories && accessories}\n                    hairColor={hairColor && hairColor}\n                    facialHairType={beard && beard}\n                    facialHairColor={beardColor && beardColor}\n                    clotheType={clothe && clothe}\n                    clotheColor={clotheColor && clotheColor}\n                    eyeType={eye && eye}\n                    eyebrowType={eyebrow && eyebrow}\n                    mouthType={mouth && mouth}\n                    skinColor={skinColor && skinColor}\n                />\n                <br/>\n                <Button\n                    onClick={catchSubmit}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                    startIcon={<SaveIcon/>}\n                >\n                    Enregistrer\n                </Button>\n                <br/>\n                <br/>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\"\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        aria-label=\"scrollable force tabs example\"\n                    >\n                        <Tab label=\"Yeux\"  {...a11yProps(0)} />\n                        <Tab label=\"Sourcil\"  {...a11yProps(1)} />\n                        <Tab label=\"Bouche\"  {...a11yProps(2)} />\n                        <Tab label=\"Cheveux\" {...a11yProps(3)} />\n                        <Tab label=\"Peau\" {...a11yProps(4)} />\n                        <Tab label=\"Barbe\"  {...a11yProps(5)} />\n                        <Tab label=\"Vêtement\" {...a11yProps(6)} />\n                        <Tab label=\"Accessoires\"  {...a11yProps(7)} />\n\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={value} index={0}>\n                    {Eye.map((type) => (\n                        <Button key={type} onClick={() => setEye(type)}>\n                            <Piece pieceType=\"eyes\" pieceSize=\"250\" eyeType={type}/>\n                        </Button>\n                    ))}\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    {Eyebrows.map((type) => (\n                        <Button key={type} onClick={() => setEyebrow(type)}>\n                            <Piece pieceType=\"eyebrows\" pieceSize=\"250\" eyebrowType={type}/>\n                        </Button>\n                    ))}\n                </TabPanel>\n                <TabPanel value={value} index={2}>\n                    {Mouth.map((type) => (\n                        <Button key={type} onClick={() => setMouth(type)}>\n                            <Piece pieceType=\"mouth\" pieceSize=\"250\" mouthType={type}/>\n                        </Button>\n                    ))}\n                </TabPanel>\n                <TabPanel value={value} index={3}>\n                    {HairColor.map((type) => (\n                        <Button key={type} className={classes.btn} variant={\"outlined\"}\n                                onClick={() => setHaircolor(type)}>\n                            {type}\n                        </Button>\n                    ))}\n                    <br/>\n                    {Hair.map((type) => (\n                        <Button key={type} onClick={() => setHair(type)}>\n                            <Piece pieceType=\"top\" pieceSize=\"100\" topType={type} hairColor={hairColor}/>\n                        </Button>\n                    ))}\n                </TabPanel>\n                <TabPanel value={value} index={4}>\n                    {SkinColor.map((type) => (\n                        <Button key={type} onClick={() => setSkinColor(type)}>\n                            <Piece pieceType=\"skin\" pieceSize=\"100\" skinColor={type}/>\n                        </Button>\n                    ))}\n                </TabPanel>\n                <TabPanel value={value} index={5}>\n                    {HairColor.map((type) => (\n                        <Button key={type} className={classes.btn} variant={\"outlined\"}\n                                onClick={() => setBeardColor(type)}>\n                            {type}\n                        </Button>\n                    ))}\n                    <br/>\n                    {Beard.map((type) => (\n                        <Button key={type} onClick={() => setBeard(type)}>\n                            <Piece pieceType=\"facialHair\" pieceSize=\"100\" facialHairType={type}\n                                   facialHairColor={beardColor}/>\n                        </Button>\n                    ))}\n                </TabPanel>\n                <TabPanel value={value} index={6}>\n                    {ClothesColor.map((type) => (\n                        <Button key={type} className={classes.btn} variant={\"outlined\"}\n                                onClick={() => setClotheColor(type)}>\n                            {type}\n                        </Button>\n                    ))}\n                    <br/>\n                    {Clothes.map((type) => (\n                        <Button key={type} onClick={() => setClothe(type)}>\n                            <Piece pieceType=\"clothe\" pieceSize=\"100\" clotheType={type} clotheColor={clotheColor}/>\n                        </Button>\n                    ))}\n                </TabPanel>\n                <TabPanel value={value} index={7}>\n                    {Accessories.map((type) => (\n                        <Button key={type} onClick={() => setAccessories(type)}>\n                            <Piece pieceType=\"accessories\" pieceSize=\"100\" accessoriesType={type}/>\n                        </Button>\n                    ))}\n                </TabPanel>\n            </div>\n        </>\n    );\n}","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Header from '../../components/App/Header/Header'\nimport { setup } from '../../services/Auth'\nimport TabAvatar from './Tab'\n\nconst UserAvatar = () => {\n  if (setup() === false) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <>\n      <Header target='profile' />\n      <TabAvatar />\n    </>\n  )\n}\n\nexport default UserAvatar\n","import React, {useEffect, useState} from 'react'\nimport { makeStyles} from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Header from '../../components/App/Header/Header'\nimport {getUserId, getUserById, editUser} from '../../services/Users'\nimport {setup} from '../../services/Auth'\nimport TextField from \"@material-ui/core/TextField\";\nimport Spinner from \"../../components/UI/Dawers/Spinner\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport { useHistory } from 'react-router-dom'\nimport {useToasts} from \"react-toast-notifications\";\nimport config from \"../../config\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport {SET_USER} from \"../../store/actions\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: '55px'\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n        maxWidth: '80%'\n    },\n    arrowBack: {\n        marginTop: '70px',\n        [theme.breakpoints.up('sm')]: {\n            marginTop: '0px'\n        }\n    }\n}))\n\nconst EditProfile = () => {\n    const classes = useStyles()\n    const {addToast} = useToasts()\n    let history = useHistory()\n    const messages = config.messages.editUser\n    const [item, setItem] = useState({})\n    const [pseudo, setPseudo] = useState()\n    const [email, setEmail] = useState()\n    const dispatch = useDispatch()\n\n\n    const ResponseUser = async () => {\n        const response = await getUserById(getUserId())\n        setItem(response.datas)\n\n        if (Object.entries(response).length !== 0) {\n            dispatch({ type: SET_USER, datas: response.datas })\n        }\n    }\n\n    useEffect(() => {\n        if (Object.entries(item).length === 0) {\n            ResponseUser()\n        }\n    })\n\n    const handleChange = (e, type) => {\n        if (type === \"pseudo\"){setPseudo(e.target.value)}\n        if (type === \"email\"){setEmail(e.target.value)}\n    }\n\n\n    const catchSubmit = async (e) => {\n        e.preventDefault()\n        const response = await editUser({\n            pseudo: pseudo,\n            userId: item.id,\n            email: email\n        })\n        await ResponseUser()\n\n        if (response === 'OK') {\n            addToast(messages.success, {appearance: 'success'})\n        } else {\n            addToast(messages.error, {appearance: 'error'})\n        }\n    }\n\n    if (setup()) {\n        if (item.pseudo === undefined) {\n            return (<><Header target='profile'/><Spinner/></>)\n        } else {\n            return (\n                <>\n                    <Header target='profile'/>\n                    <IconButton  className={classes.arrowBack} href={\"#\"} onClick={() => history.goBack()}>\n                        <ArrowBackIcon color='primary'/>\n                    </IconButton>\n                    <div className={classes.root}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={2}>\n                                <Grid item>\n                                    <Typography component={\"h1\"} variant={\"h5\"}>\n                                        Modifier mes informations\n                                    </Typography>\n                                    <br/>\n                                    <TextField\n                                        id=\"pseudo\"\n                                        label=\"Pseudo\"\n                                        defaultValue={item && item.pseudo}\n                                        variant=\"outlined\"\n                                        onChange={(e) => {handleChange(e, \"pseudo\")}}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    {/*<br/>\n                                    <TextField\n                                        id=\"mail\"\n                                        label=\"Mail\"\n                                        defaultValue={item && item.email}\n                                        variant=\"outlined\"\n                                        onChange={(e) => {handleChange(e, \"email\")}}\n                                    />\n                                    <br/>\n                                    <br/>*/}\n                                    <Button\n                                        onClick={catchSubmit}\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        size=\"small\"\n                                        className={classes.button}\n                                        startIcon={<SaveIcon/>}\n                                    >\n                                        Enregistrer\n                                    </Button>\n\n\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </div>\n                </>\n            )\n        }\n    }else {\n        window.location.href = '/'\n    }\n}\n\nexport default EditProfile\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Home from './containers/Home/Home'\nimport Cases from './containers/Cases/Cases'\nimport Favorites from './containers/Favorites/Favorites'\nimport Profile from './containers/Profile/Profile'\nimport * as serviceWorker from './serviceWorker'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { adminReducer } from './store/reducers'\nimport { Provider } from 'react-redux'\nimport ReduxThunk from 'redux-thunk'\nimport dotenv from 'dotenv'\nimport { ToastProvider } from 'react-toast-notifications'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport colorTheme from './components/UI/ColorTheme/ColorTheme'\nimport DetailCase from './containers/DetailCase/DetailCase'\nimport config from './config'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport CasePost from './containers/CasePost/CasePost'\nimport QuestionPost from './containers/QuestionPost/QuestionPost'\nimport UserAvatar from \"./containers/UserAvatar/UserAvatar\";\nimport EditProfile from \"./containers/Profile/EditProfile\";\ndotenv.config()\n\n// MIDDLEWARE\nconst middleWare = store => next => action => {\n  return next(action)\n}\n\nexport const store = createStore(\n  adminReducer,\n  compose(\n    applyMiddleware(ReduxThunk, middleWare)\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n)\n\nReactDOM.render(\n  <ThemeProvider theme={colorTheme}>\n    <Provider store={store}>\n      <ToastProvider autoDismiss autoDismissTimeout={config.messages.timeOut}>\n        <Router>\n          <div>\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route exact path='/cases' component={Cases} />\n              <Route path='/case/:id' component={DetailCase} />\n              <Route exact path='/favorites' component={Favorites} />\n              <Route exact path='/profile' component={Profile} />\n              <Route exact path='/profile/edit' component={EditProfile} />\n              <Route exact path='/post-question' component={QuestionPost} />\n              <Route exact path='/post-case' component={CasePost} />\n              <Route exact path='/avatar' component={UserAvatar} />\n            </Switch>\n          </div>\n        </Router>\n      </ToastProvider>\n    </Provider>\n  </ThemeProvider>\n  , document.getElementById('root')\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}